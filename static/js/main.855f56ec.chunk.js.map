{"version":3,"sources":["components/SideBar/files/logo.svg","utils/consts.js","router/pathNames.js","containers/NotFound/NotFound.js","components/ErrorModal/index.js","components/ErrorModal/ErrorModal.js","redux/error/actionCreators.js","redux/error/actionTypes.js","components/Header/components/Avatar/index.js","components/Header/components/Avatar/Avatar.js","components/Header/Header.js","utils/fetch.js","redux/auth/actionTypes.js","redux/auth/authReducer.js","components/Header/index.js","components/SideBar/SideBar.js","components/SideBar/index.js","redux/auth/actionsCreator.js","components/AbnormalityChip/AbnormalityChip.js","components/AbnormalityChip/index.js","utils/date.js","containers/Tests/components/TestsTable/tableColumns.js","containers/Tests/components/TestsTable/TestsTable.js","containers/TestPage/components/GraphContainer/GraphContainer.js","containers/TestPage/components/GraphContainer/index.js","containers/TestPage/TestPage.js","containers/TestPage/index.js","redux/gaitModel/actionsCreator.js","redux/gaitModel/actionTypes.js","containers/Tests/Tests.js","redux/patients/actionsCreator.js","redux/patients/actionTypes.js","redux/tests/actionsCreator.js","redux/tests/actionTypes.js","containers/Tests/index.js","components/Modal/index.js","components/Modal/Modal.js","components/Forms/PatientForm/index.js","components/Forms/PatientForm/PatientForm.js","redux/gaitModel/reducer.js","redux/patients/reducer.js","redux/tests/reducer.js","redux/plans/reducer.js","redux/plans/actionTypes.js","redux/defaultPlans/reducer.js","redux/defaultPlans/actionTypes.js","redux/videos/reducer.js","redux/videos/actionTypes.js","redux/error/reducer.js","redux/index.js","redux/store.js","redux/defaultPlans/actionsCreator.js","redux/videos/actionsCreator.js","components/Forms/PlanForm/PlanForm.js","components/Forms/PlanForm/index.js","containers/Patients/components/PatientDataSection/index.js","containers/Patients/components/PatientDataSection/PatientDataSection.js","components/DetailsCard/index.js","components/DetailsCard/DetailsCard.js","containers/Patients/components/TestsSection/index.js","containers/Patients/components/TestsSection/TestsSection.js","containers/Patients/components/PatientPage/PatientPage.js","containers/Patients/components/PatientPage/index.js","redux/plans/actionsCreator.js","containers/Patients/components/PatientsTable/tableColumns.js","containers/Patients/components/PatientsTable/index.js","containers/Patients/components/PatientsTable/PatientsTable.js","containers/Patients/Patients.js","containers/Patients/index.js","components/AddCard/index.js","components/AddCard/AddCard.js","components/Forms/DefaultPlanForm/DefaultPlanForm.js","components/Forms/DefaultPlanForm/index.js","components/DefaultPlanCard/index.js","components/DefaultPlanCard/DefaultPlanCard.js","containers/DefaultPlans/DefaultPlans.js","containers/DefaultPlans/index.js","components/VideoCard/index.js","components/VideoCard/VideoCard.js","components/Forms/VideosForm/index.js","components/Forms/VideosForm/VideosForm.js","containers/Videos/Videos.js","containers/Videos/index.js","App.js","components/Loading/index.js","components/Loading/Loading.js","containers/Login/components/Form/index.js","containers/Login/components/Form/Form.js","containers/Login/Login.js","containers/Login/index.js","LoginRequiredRoute.js","AppWrapper.js","index.js"],"names":["module","exports","AUTH","NOT_FOUND","API","MODAL","DEFAULT_PLAN_FORM","PLAN_FORM","GRAPH","tabKey","accelerations","displacements","velocities","radioValue","x","y","z","validLeftTigh","switchLabelText","pathsNames","login","patientsTests","patients","defaultPlans","videos","notFound","NotFound","isInApp","notFoundClasses","classNames","className","status","ErrorModal","props","errorMessage","cleanError","handleCloseErrorModal","mask","onCancel","footer","onClick","activateErrorModal","dispatch","type","payload","Avatar","userName","userImage","src","alt","size","icon","UserOutlined","withRouter","location","normalizedTitle","pathname","displayRouteName","SERVER_URL","config","buildHeader","headers","localStorage","getItem","get","endPointUrl","a","configOptions","axios","res","response","Error","data","post","console","log","message","put","del","delete","initialState","therapistId","isUserAuthenticated","loading","authReducer","state","action","name","img","therapisttherapistIdId","id","connect","Header","SideBar","handleLogout","history","Logo","to","pathNames","activeClassName","mapDispatchToProps","removeItem","LOCAL_STORAGE_TOKEN","push","AbnormalityChip","results","colorClass","toLowerCase","toUpperCase","addZeroPrefixIfNeeded","strToModify","length","normalizeDate","dateToNormalize","shouldDisplayWithTime","normalizedDate","Date","day","getDate","toString","month","getMonth","year","getFullYear","hours","getUTCHours","minutes","getUTCMinutes","isNaN","columns","title","dataIndex","sorter","b","localeCompare","render","_","normalizedPatientObj","rowColor","style","background","children","patientImage","testDate","waitingStatus","TestsTable","allTests","allPatients","loadingAllTests","handleTableRowClick","dataSource","map","test","patientId","patientID","obj","forEach","patient","key","Math","random","picture","waitForPlan","testId","abnormality","date","pagination","onRow","testRow","TabPane","Tabs","GraphContainer","sensorData","sensor","isSensorBelongsToLeftTigh","useState","setRadioValue","activeTab","setActiveTab","isEmpty","setIsEmpty","accelerationsData","setAccelerationsData","displacementsData","setDisplacementsData","velocitiesData","setVelocitiesData","shouldDisplayValidData","setShouldDisplayValidData","handleRadioClick","e","target","value","getData","handleHideValidResults","switchMode","renderTabContent","shouldDisplayBtn","defaultChecked","Group","onChange","checked","description","width","height","chartType","loader","options","hAxis","vAxis","series","1","curveType","useEffect","accelerationsObj","displacementsObj","velocitiesObj","point","index","setNormalizeData","onTabClick","activeTabKey","tab","TestPage","gaitModel","loadingGaitModel","getGaitModelByTestId","cleanGaitModel","selectedOption","setSelectedOption","sensor1","setSensor1","sensor2","setSensor2","sensor3","setSensor3","sensor4","setSensor4","sensor5","setSensor5","sensor6","setSensor6","sensor7","setSensor7","shouldOpenModal","setShouldOpenModal","radio","handleSelectChange","val","getSensor","handleOnCancelModal","Object","keys","accelerationX","accelerationY","accelerationZ","displacementsX","displacementsY","displacementsZ","velocitiesX","velocitiesY","velocitiesZ","dataElement","timeStamp","tmpObj","report","generateSensorsData","visible","destroyOnClose","defaultValue","Option","gaitModelReducer","Tests","getAllPatients","getAllTests","selectedTestId","setSelectedTestId","testObj","handleBackClick","goBack","path","exact","getTestsById","reverse","cleanTestsById","patientsReducer","testsReducer","Modal","FormToRender","handleFormSubmit","handleOnCancel","formTitle","formDescription","isLoading","didPostRequestSucceed","setDidPostRequestSucceed","dataToEdit","allDefaultPlans","allVideos","modalWidth","rest","handleModalClose","toggleOverlay","didUserForceCancel","setTimeout","OverlayContext","Consumer","afterClose","subTitle","PatientForm","nameInputRef","useRef","current","focus","layout","onFinish","formData","Item","label","rules","required","min","ref","Password","pattern","htmlType","loadingAllPatients","loadingCreatePatient","allTestsById","loadingAllTestsById","planById","loadingPlanById","loadingEditPlan","plansReducer","loadingAllDefaultPlans","loadingCreateDefaultPlan","defaultPlansReducer","loadingAllVideos","loadingCreateVideo","videosReducer","errorObj","errorOccurred","errorReducer","reducers","combineReducers","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","getAllDefaultPlans","getAllVideos","Select","PlanForm","setNameField","instructions","setInstructionsField","setVideosField","setDefaultPlansField","Form","useForm","form","normalizedVideosArr","video","videoID","times","setFieldsValue","defaultPlanIDs","therapistID","defaultActiveKey","initialValue","field","mode","placeholder","arrOfSelectedOptions","defaultPlan","isSelected","timesToSet","i","videoClasses","selected","videoId","isVideoAlreadyInList","updatedVideosArr","filter","tmpVideoObj","handleVideosClick","inputValue","cloneDeep","handleNumberChange","link","PatientDataSection","handleOpenModal","calculatePercentage","totalTimes","totalTimesLeft","timesLeft","floor","mail","age","strokeColor","percent","DetailsCard","handleCardClick","TestsSection","handleTestClick","patientName","content","PatientPage","getRehabPlanById","editPlan","createPlan","clickedTestId","setClickedTestId","modalMode","setModalMode","editPlanResponse","createPlanResponse","rehabPlanID","planId","statusCode","patientObj","phoneNumber","aa","bb","normalizedWaitingStatus","sensorsKitID","PatientsTable","Patients","createPatient","selectedPatient","setSelectedPatient","createPatientResponse","handleAddPatientClick","AddCard","handleClick","DefaultPlanForm","setVideos","shouldDisplayRequiredInfo","finalFormData","DefaultPlanCard","plan","handleRemoveClick","handleRemove","success","actions","onConfirm","okText","cancelText","DefaultPlans","createDefaultPlan","deleteDefaultPlan","handleRemoveDefaultPlan","creationResponse","renderDefaultPlan","DefaultPlansForm","handleAddDefaultPlanClick","defaultPlanData","addedDefaultPlanObj","idToDelte","arrOfDefaultPlans","getState","newArrOfDefaultPlans","VideoCard","displayConfirmMessage","VideosForm","Videos","createVideo","deleteVideo","handleRemoveVideo","idToDelete","deletionRespone","renderVideo","handleAddVideoClick","videoData","addedVideoObj","arrOfVideo","newArrOfVideos","React","createContext","isOverlayActive","overlayClasses","Provider","component","PatientTests","Loading","handleLoginFormSubmit","setMail","password","setPassword","firstInputRef","handleInputChange","event","autoComplete","preventDefault","Login","from","viewBox","fill","xmlns","d","stroke","strokeWidth","body","statusText","setItem","token","alert","Component","checkUserAuthStatusOnAppLoad","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.855f56ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b7dcb8e9.svg\";","export const AUTH = {\n  isAuthenticated: 'isAuthenticated',\n  isNotAuthenticated: 'notAuthenticated',\n  isPending: 'isPending',\n\n  authenticatedMessage: 'OK',\n\n}\n\nexport const NOT_FOUND = {\n  firstLine: 'This link is broken.. Please try again',\n  secondLine: 'Make sure you are authorized, logged in & that you wrote the link correctly',\n}\n\nexport const API = {\n  postRequestSuccess: 'postSuccess',\n  postRequestError: 'postError',\n  deleteRequestSuccess: 'deleteSuccess',\n  deleteRequestError: 'deleteSuccess',\n\n  authEndpoint: 'auth',\n  patientEndpoint: 'patient',\n  rehabPlansEndpoint: 'rehabPlan',\n  videoEndpoint: 'video',\n  defaultPlansEndpoint: 'defaultPlan',\n}\n\nexport const MODAL = {\n  defaultErrorDescription: 'unfortunately, something went wrong.. try again',\n  optionalPlaceholderToIgnore: '<Optional>',\n}\n\n\nexport const DEFAULT_PLAN_FORM = {\n  videosTab: 'videos',\n  planInfoTab: 'plan information',\n\n  nameLabel: 'plan name:',\n  instructionsLabal: 'instructions:',\n  chooseVideosLabel: \"choose videos: (click on the video's name):\",\n\n  selectPlansPlaceholder: 'select default plans...',\n}\n\n\nexport const PLAN_FORM = {\n  videosAndPlansTab: 'videos & default plans',\n  planInfoTab: 'plan information',\n\n  nameLabel: 'plan name:',\n  instructionsLabal: 'instructions:',\n  defaultPlansLabel: 'choose default plan:',\n  chooseVideosLabel: \"choose videos: (click on the video's name):\",\n\n  selectPlansPlaceholder: 'select default plans...',\n}\n\nexport const GRAPH = {\n  tabKey: {\n    accelerations: '1',\n    displacements: '2',\n    velocities: '3',\n  },\n  radioValue: {\n    x: 'x',\n    y: 'y',\n    z: 'z',\n  },\n  // eslint-disable-next-line max-len\n  validLeftTigh: [-2.114, -2.404, -2.641, -2.818, -2.929, -2.997, -3.036, -3.056, -3.059, -3.004, -2.879, -2.707, -2.534, -2.363, -2.163, -1.885, -1.475, -0.904, -0.188, 0.617, 1.419, 2.085, 2.487, 2.531, 2.27, 1.796, 1.246, 1.088, 3.281, 6.627, 8.084, 6.629, 3.609, 1.972, 0.675, -0.507, -1.581, -2.011, -1.557, -0.501, 0.623, 1.43, 1.656, 1.301, 0.638, -0.044, -0.563, -0.966, -1.298, -1.562, -1.7, -1.611, -1.268, -0.736, -0.191, 0.203, 0.357, 0.264, 0.008, -0.341, -0.729, -1.145, -1.538, -1.834, -1.976, -1.986, -1.921, -1.833, -1.724, -1.593, -1.451, -1.318, -1.22, -1.164, -1.149, -1.171, -1.211, -1.237, -1.204, -1.075, -0.869, -0.627, -0.421, -0.282, -0.212, -0.145, 0.014, 0.322, 0.734, 1.087, 1.182, 1.458, 1.998, 2.654, 2.96, 2.731, 2.351, 1.901, 1.59, 1.338, 1.059, 0.721, 0.283, -0.204, -0.672, -1.001, -0.961, -0.338, 0.802, 2.023, 2.82, 3.064, 2.832, 2.406, 1.905, 1.458, 1.022, 0.587, 0.127, -0.324, -0.744, -1.064, -1.309, -1.513, -1.748, -2.053, -2.375, -2.68, -2.913, -3.075, -3.146, -3.154, -3.12, -3.062, -2.951, -2.793, -2.605, -2.399, -2.16, -1.875, -1.53, -1.103, -0.569, 0.068, 0.763, 1.44, 2.011, 2.366, 2.432, 2.272, 2.141, 2.176, 2.599, 3.416, 4.527, 5.583, 6.193, 5.102, 4.105],\n  switchLabelText: 'Display valid data:',\n\n}\n","const pathsNames = {\n  login: '/login/',\n  patientsTests: '/tests/',\n  patients: '/patients/',\n  defaultPlans: '/defaultPlans/',\n  videos: '/videos/',\n  notFound: '/notFound/',\n}\n\nexport default pathsNames\n","import React from 'react'\nimport { Result } from 'antd'\nimport classNames from 'classnames'\nimport { NOT_FOUND } from 'utils/consts'\nimport './notFound.scss'\n\nexport default function NotFound({ isInApp }) {\n  const notFoundClasses = classNames({\n    'not-found-page': true,\n    'in-app': isInApp,\n    'outside-app': !isInApp,\n  })\n  return (\n    <div className={notFoundClasses}>\n      <div className=\"not-found-message\">\n        <Result\n          status=\"404\"\n        />\n        <div className=\"text-section\">\n          <p>{NOT_FOUND.firstLine}</p>\n          <p>{NOT_FOUND.secondLine}</p>\n          <h2>SafeWalk Team.</h2>\n          <hr />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import ErrorModal from './ErrorModal'\n\nexport default ErrorModal","import React from 'react'\nimport { Modal as AntModal, Button } from 'antd'\nimport './errorModal.scss'\n\nconst ErrorModal = (props) => {\n  const { errorMessage, cleanError } = props\n\n  function handleCloseErrorModal() {\n    cleanError()\n  }\n  return (\n    <AntModal\n      className=\"error-modal-container\"\n      mask\n      onCancel={handleCloseErrorModal}\n      footer={[\n        <Button onClick={handleCloseErrorModal}>\n          OK\n        </Button>,\n      ]}\n      {...props}\n    >\n      <h2>Oops... Error has occured</h2>\n      <i className=\"fas fa-exclamation-circle fa-5x\" />\n      <p>{errorMessage}</p>\n    </AntModal>\n  )\n}\n\nexport default ErrorModal\n","import * as ActionTypes from './actionTypes'\n\n\nexport const activateErrorModal = (errorMessage) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.CREATE_ERROR_OBJ,\n    payload: {\n      errorMessage: errorMessage || 'error has occured.. please try again.',\n    },\n  })\n}\n\nexport const cleanError = () => (dispatch) => {\n  dispatch({\n    type: ActionTypes.CLEAN_ERROR_OBJ,\n  })\n}\n","export const CREATE_ERROR_OBJ = 'CREATE_ERROR_OBJ'\nexport const CLEAN_ERROR_OBJ = 'CLEAN_ERROR_OBJ'\n","import Avatar from './Avatar'\n\nexport default Avatar\n","import React from 'react'\nimport { Avatar as AntdAvatar } from 'antd'\nimport { UserOutlined } from '@ant-design/icons'\nimport PropTypes from 'prop-types'\nimport './avatar.scss'\n\nconst Avatar = ({ userName, userImage }) => {\n  return (\n\n    <div className=\"avatar-container\">\n      <hr />\n      <h4>{userName}</h4>\n      {userImage ? (\n        <img src={userImage} alt=\"profile image\" />\n      ) : (\n        <AntdAvatar className=\"antd-avatar\" size={44} icon={<UserOutlined />} />\n      )}\n      {' '}\n    </div>\n  )\n}\n\nexport default Avatar\n\n\nAvatar.propTypes = {\n  userName: PropTypes.string.isRequired,\n  userImage: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport pathsNames from 'router/pathNames'\nimport Avatar from './components/Avatar'\nimport './header.scss'\n\nconst Header = ({ location, userName, userImage }) => {\n  const displayRouteName = () => {\n    let normalizedTitle\n    switch (location.pathname) {\n      case pathsNames.patientsTests:\n        normalizedTitle = 'Patient\\'s Tests'\n        break\n      case pathsNames.patients:\n        normalizedTitle = 'All Patients'\n        break\n      case pathsNames.defaultPlans:\n        normalizedTitle = 'Default Plans'\n        break\n      case pathsNames.videos:\n        normalizedTitle = 'Exercise Videos'\n        break\n      default:\n        normalizedTitle = 'Safe Walk'\n    }\n    return normalizedTitle\n  }\n\n  return (\n    <div className=\"header-container\">\n      <h1 className=\"header-container__route-title\">{displayRouteName()}</h1>\n      <Avatar userName={userName} userImage={userImage} />\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n\nHeader.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n}\n","import axios from 'axios'\nimport config from 'config'\n\nconst { SERVER_URL } = config\n\n\nfunction buildHeader() {\n  const token = localStorage.getItem('authToken')\n  return { headers: { 'x-auth-token': token } }\n}\n\nexport async function get(endPointUrl) {\n  const configOptions = buildHeader()\n  try {\n    const res = await axios.get(`${SERVER_URL}/${endPointUrl}`, configOptions)\n    return res\n  } catch (err) {\n    if (err.response) throw new Error(err.response.data)\n    else throw err\n  }\n}\n\nexport async function post(endPointUrl, data) {\n  const configOptions = buildHeader()\n  try {\n    const res = await axios.post(`${SERVER_URL}/${endPointUrl}`, data, configOptions)\n    return res\n  } catch (err) {\n    console.log('err from post', err)\n    console.log('err from post', err.message)\n    throw new Error(err)\n  }\n}\n\nexport async function put(endPointUrl, data) {\n  const configOptions = buildHeader()\n  try {\n    const res = await axios.put(`${SERVER_URL}/${endPointUrl}`, data, configOptions)\n    return res\n  } catch (err) {\n    throw new Error(err)\n  }\n}\n\nexport async function del(endPointUrl) {\n  const configOptions = buildHeader()\n  try {\n    const res = await axios.delete(`${SERVER_URL}/${endPointUrl}`, configOptions)\n    return res\n  } catch (err) {\n    console.log('err from delete: ', err)\n    throw new Error(err)\n  }\n}\n","export const CHECK_USER_AUTH_STATUS_ON_APP_LOAD = 'CHECK_USER_AUTH_STATUS_ON_APP_LOAD'\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGOUT = 'LOGOUT'\nexport const SET_LOADING_TO_TRUE = 'SET_LOADING_TO_TRUE'\nexport const SET_LOADING_TO_FALSE = 'SET_LOADING_TO_FALSE'","import { AUTH } from 'utils/consts'\nimport * as ActionType from './actionTypes'\n\nconst initialState = {\n  userName: localStorage.getItem('userName') || '',\n  userImage: localStorage.getItem('userImage') || '',\n  therapistId: localStorage.getItem('therapistId') || '',\n  isUserAuthenticated: AUTH.isPending,\n  loading: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHECK_USER_AUTH_STATUS_ON_APP_LOAD:\n      return {\n        ...state,\n        isUserAuthenticated: action.payload,\n      }\n    case ActionType.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isUserAuthenticated: AUTH.isAuthenticated,\n        userName: action.payload.name,\n        userImage: action.payload.img,\n        therapisttherapistIdId: action.payload.id,\n      }\n\n    case ActionType.SET_LOADING_TO_TRUE:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case ActionType.SET_LOADING_TO_FALSE:\n      return {\n        ...state,\n        loading: false,\n      }\n    case ActionType.LOGOUT: {\n      return {\n        ...state,\n        isUserAuthenticated: AUTH.isNotAuthenticated,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","import { connect } from 'react-redux'\nimport Header from './Header'\n\nimport { handleLoginFormSubmit } from 'redux/auth/actionsCreator'\nimport authReducer from \"redux/auth/authReducer\";\nconst mapStateToProps = (state) => ({\n  userName: state.authReducer.userName,\n  userImage: state.authReducer.userImage,\n})\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './sideBar.scss'\nimport { NavLink } from 'react-router-dom'\nimport Logo from './files/logo.svg'\nimport pathNames from '../../router/pathNames'\n\nconst SideBar = ({ handleLogout, history }) => {\n  function handleLogoutClick() {\n    handleLogout(history)\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <img className=\"sidebar__logo\" src={Logo} alt=\"logo\" />\n      <ul>\n        <li>\n          <NavLink\n            to={pathNames.patientsTests}\n            className=\"sidebar__nav-link\"\n            activeClassName=\"selected\"\n          >\n            Patient’s tests\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={pathNames.patients}\n            className=\"sidebar__nav-link\"\n            activeClassName=\"selected\"\n          >\n            Patients\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={pathNames.defaultPlans}\n            className=\"sidebar__nav-link\"\n            activeClassName=\"selected\"\n          >\n            Default plans\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={pathNames.videos}\n            className=\"sidebar__nav-link\"\n            activeClassName=\"selected\"\n          >\n            Exercise videos\n          </NavLink>\n        </li>\n      </ul>\n      <button type=\"button\" className=\"sidebar__logout-btn\" onClick={handleLogoutClick}>Log Out</button>\n    </div>\n  )\n}\n\nexport default SideBar\n\nSideBar.propTypes = {\n  handleLogout: PropTypes.func.isRequired,\n}\n","import { connect } from 'react-redux'\nimport SideBar from './SideBar'\nimport { handleLogout } from '../../redux/auth/actionsCreator'\n\nconst mapStateToProps = (state) => ({\n  isUserAuthenticated: state.authReducer.isUserAuthenticated,\n  loading: state.authReducer.loading,\n})\nconst mapDispatchToProps = { handleLogout }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar)\n","import React from 'react'\nimport config from 'config'\nimport { API, AUTH } from 'utils/consts'\nimport pathsNames from 'router/pathNames'\nimport { post } from 'utils/fetch'\nimport * as ActionsTypes from './actionTypes'\n\n\nexport const checkUserAuthStatusOnAppLoad = () => {\n  const localToken = localStorage.getItem(config.LOCAL_STORAGE_TOKEN)\n  const isTokenExists = !!localToken\n  return {\n    type: ActionsTypes.CHECK_USER_AUTH_STATUS_ON_APP_LOAD,\n    payload: isTokenExists ? AUTH.isAuthenticated : AUTH.isNotAuthenticated,\n  }\n}\n\nexport const handleLoginFormSubmit = (mail, password) => async (dispatch) => {\n  dispatch({ type: ActionsTypes.SET_LOADING_TO_TRUE })\n  const body = {\n    mail,\n    password,\n  }\n  try {\n    const { data, status, statusText } = await post(`${API.authEndpoint}/login`, body)\n    if (status === 200 && statusText === AUTH.authenticatedMessage) {\n      localStorage.setItem(\n        config.LOCAL_STORAGE_TOKEN,\n        data.token,\n      ) // TODO:: is it safe like this???????\n      localStorage.setItem('userName', data.name)\n      localStorage.setItem('userImage', data.picture)\n      localStorage.setItem('therapistId', data.id)\n      dispatch({\n        type: ActionsTypes.LOGIN_SUCCESS,\n        payload: {\n          name: data.name,\n          img: data.picture,\n          id: data.id,\n        },\n      })\n    } else alert('something occured... login didnt complete') // TODO:: learn the behavior of the fetch and change it accordingly\n  } catch (err) {\n    // TODO:: error handling..\n    alert('error has occured when trying to log in.. check form details')\n    console.log('err: ', err)\n  }\n  dispatch({ type: ActionsTypes.SET_LOADING_TO_FALSE })\n}\n\nexport const handleLogout = (history) => (dispatch) => {\n  localStorage.removeItem(config.LOCAL_STORAGE_TOKEN)\n  localStorage.removeItem('userName')\n  localStorage.removeItem('userImage')\n  dispatch({ type: ActionsTypes.LOGOUT })\n  history.push(pathsNames.login)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './abnormalityChip.scss'\n\nconst AbnormalityChip = ({ results }) => {\n  const colorClass = results.toLowerCase() === 'abnormality' ? 'red' : 'green'\n  return <span className={`chip chip--${colorClass}`}>{results.toUpperCase()}</span>\n}\n\nexport default AbnormalityChip\n\nAbnormalityChip.propTypes = {\n  results: PropTypes.string.isRequired,\n}\n","import AbnormalityChip from './AbnormalityChip'\n\nexport default AbnormalityChip\n","\nconst addZeroPrefixIfNeeded = (strToModify) => (strToModify.length === 1 ? `0${strToModify}` : strToModify)\n\nexport const normalizeDate = (dateToNormalize, shouldDisplayWithTime = true) => {\n  const normalizedDate = new Date(dateToNormalize)\n  let day = normalizedDate.getDate().toString()\n  day = addZeroPrefixIfNeeded(day)\n  let month = (normalizedDate.getMonth() + 1).toString()\n  month = addZeroPrefixIfNeeded(month)\n  const year = normalizedDate.getFullYear().toString()\n  let hours = normalizedDate.getUTCHours().toString()\n  hours = addZeroPrefixIfNeeded(hours)\n  let minutes = normalizedDate.getUTCMinutes().toString()\n  minutes = addZeroPrefixIfNeeded(minutes)\n\n  if (!isNaN(day) && !isNaN(month) && !isNaN(year) && !isNaN(hours) && !isNaN(minutes)) return shouldDisplayWithTime ? `${day}-${month}-${year}, ${hours}:${minutes}` : `${day}-${month}-${year}`\n  return 'date is not valid'\n}\n","import React from 'react';\nimport AbnormalityChip from 'components/AbnormalityChip';\nimport { normalizeDate } from 'utils/date';\n\nconst MARKED_ROW_BACKGROUND_COLOR = 'hsl(0, 98%, 84%)';\n\nconst columns = [\n  {\n    title: 'Patient name',\n    dataIndex: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    render(_, normalizedPatientObj) {\n      const rowColor = normalizedPatientObj.results && normalizedPatientObj.results.toLowerCase() === 'abnormality' ? `${MARKED_ROW_BACKGROUND_COLOR}` : '';\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (\n          <div>\n            {normalizedPatientObj.patientImage\n            && (\n            <img\n              className=\"patient-image\"\n              src={normalizedPatientObj.patientImage}\n              alt=\"patient\"\n            />\n            )}\n            &nbsp; &nbsp;\n            {` ${normalizedPatientObj.name}`}\n          </div>\n        ),\n      };\n    },\n  },\n  {\n    title: 'Test date',\n    dataIndex: 'testDate',\n    // sorter: (a, b) => a.getTime() > b.getTime(),\n    render: (testDate, normalizedPatientObj) => {\n      const normalizedDate = normalizeDate(testDate);\n      const rowColor = normalizedPatientObj.results && normalizedPatientObj.results.toLowerCase() === 'abnormality' ? `${MARKED_ROW_BACKGROUND_COLOR}` : '';\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (<span>{normalizedDate}</span>),\n      };\n    },\n  },\n  {\n    title: 'Results',\n    dataIndex: 'results',\n    sorter: (a, b) => a.results.localeCompare(b.results),\n    render: (results) => {\n      const rowColor = results && results.toLowerCase() === 'abnormality' ? `${MARKED_ROW_BACKGROUND_COLOR}` : '';\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (\n          <AbnormalityChip results={results} />\n        ),\n      };\n    },\n  },\n  {\n    title: 'Waiting for plan',\n    dataIndex: 'waitingStatus',\n    sorter: (a, b) => a.waitingStatus.localeCompare(b.waitingStatus),\n    render: (waitingStatus, normalizedPatientObj) => {\n      const rowColor = normalizedPatientObj.results && normalizedPatientObj.results.toLowerCase() === 'abnormality' ? `${MARKED_ROW_BACKGROUND_COLOR}` : '';\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (<span className=\"waiting-status\">{waitingStatus}</span>),\n      };\n    },\n  },\n];\n\nexport default columns;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Table } from 'antd'\nimport columns from './tableColumns'\n\nconst TestsTable = ({ allTests, allPatients, loadingAllTests, handleTableRowClick }) => {\n  function getNormalizedData() {\n    const normalizedPatients = allTests.map((test) => {\n      const patientId = test.patientID\n      const obj = {}\n      allPatients.forEach((patient) => {\n        if (patientId === patient.id) {\n          obj.key = Math.random()\n          obj.patientImage = patient.picture\n          obj.name = patient.name || 'name is not valid'\n          obj.waitingStatus = patient.waitForPlan ? 'Yes' : 'No'\n          obj.testId = test.id\n        }\n      })\n      return {\n        ...obj,\n        results: test.abnormality ? 'abnormality' : 'normal',\n        testDate: test.date || 'date is not valid',\n      }\n    })\n\n    return normalizedPatients\n  }\n\n  function handleRowClick(testRow) {\n    return {\n      onClick: () => handleTableRowClick(testRow),\n    }\n  }\n\n\n  return (\n    <div className=\"table-wrapper\">\n      <Table\n        className=\"table\"\n        columns={columns}\n        dataSource={getNormalizedData()}\n        pagination={false}\n        loading={loadingAllTests}\n        onRow={handleRowClick}\n      />\n    </div>\n  )\n}\n\nexport default TestsTable\n\nTestsTable.propTypes = {\n  allTests: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n  allPatients: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n  loadingAllTests: PropTypes.bool.isRequired,\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Empty, Radio, Spin, Tabs, Button, Switch,\n} from 'antd'\nimport PropTypes from 'prop-types'\nimport Chart from 'react-google-charts'\nimport { GRAPH } from 'utils/consts'\nimport 'containers/TestPage/testPage.scss'\n\nconst { TabPane } = Tabs\n\nconst GraphContainer = (props) => {\n  const {\n    sensor: sensorData,\n    isSensorBelongsToLeftTigh,\n  } = props\n\n  const [radioValue, setRadioValue] = useState(GRAPH.radioValue.x)\n  const [activeTab, setActiveTab] = useState(GRAPH.tabKey.accelerations)\n  const [isEmpty, setIsEmpty] = useState(false)\n  const [accelerationsData, setAccelerationsData] = useState(null)\n  const [displacementsData, setDisplacementsData] = useState(null)\n  const [velocitiesData, setVelocitiesData] = useState(null)\n  const [shouldDisplayValidData, setShouldDisplayValidData] = useState(true)\n\n\n  useEffect(() => {\n    isEmpty && setIsEmpty(false)\n    setNormalizeData()\n  }, [sensorData, shouldDisplayValidData])\n\n  function handleRadioClick(e) {\n    setRadioValue(e.target.value)\n    isEmpty && setIsEmpty(false)\n  }\n\n  function setNormalizeData() {\n    const accelerationsObj = {\n      x: ['dogs', 'patients points'],\n      y: ['dogs', 'patients points'],\n      z: ['dogs', 'patients points'],\n    }\n    const displacementsObj = {\n      x: ['dogs', 'patients points'],\n      y: ['dogs', 'patients points'],\n      z: ['dogs', 'patients points'],\n    }\n    const velocitiesObj = {\n      x: ['dogs', 'patients points'],\n      y: ['dogs', 'patients points'],\n      z: ['dogs', 'patients points'],\n    }\n\n    accelerationsObj.x = isSensorBelongsToLeftTigh && shouldDisplayValidData ? (\n      [\n        [...accelerationsObj.x, 'valid example'],\n        ...sensorData.accelerations.x.map((point, index) => (\n          [point.x, point.y, GRAPH.validLeftTigh[index]]\n        )),\n      ]\n    ) : ([\n      accelerationsObj.x,\n      ...sensorData.accelerations.x.map((point) => [point.x, point.y]),\n    ])\n\n    accelerationsObj.y = [\n      accelerationsObj.y,\n      ...sensorData.accelerations.y.map((point) => [point.x, point.y]),\n    ]\n    accelerationsObj.z = [\n      accelerationsObj.z,\n      ...sensorData.accelerations.z.map((point) => [point.x, point.y]),\n    ]\n\n    displacementsObj.x = [\n      displacementsObj.x,\n      ...sensorData.displacements.x.map((point) => [point.x, point.y]),\n    ]\n    displacementsObj.y = [\n      displacementsObj.y,\n      ...sensorData.displacements.y.map((point) => [point.x, point.y]),\n    ]\n    displacementsObj.z = [\n      displacementsObj.z,\n      ...sensorData.displacements.z.map((point) => [point.x, point.y]),\n    ]\n\n    velocitiesObj.x = [\n      velocitiesObj.x,\n      ...sensorData.velocities.x.map((point) => [point.x, point.y]),\n    ]\n    velocitiesObj.y = [\n      velocitiesObj.y,\n      ...sensorData.velocities.y.map((point) => [point.x, point.y]),\n    ]\n    velocitiesObj.z = [\n      velocitiesObj.z,\n      ...sensorData.velocities.z.map((point) => [point.x, point.y]),\n    ]\n\n    setAccelerationsData(accelerationsObj)\n    setDisplacementsData(displacementsObj)\n    setVelocitiesData(velocitiesObj)\n  }\n\n\n  function handleTabClick(activeTabKey) {\n    isEmpty && setIsEmpty(false)\n    setActiveTab(activeTabKey)\n  }\n\n  function getData() {\n    if (accelerationsData && activeTab === GRAPH.tabKey.accelerations) {\n      if (radioValue === GRAPH.radioValue.x) {\n        if (accelerationsData.x.length <= 3) {\n          !isEmpty && setIsEmpty(true)\n        }\n        return accelerationsData.x\n      }\n      if (radioValue === GRAPH.radioValue.y) {\n        if (accelerationsData.y.length <= 3) {\n          !isEmpty && setIsEmpty(true)\n        }\n        return accelerationsData.y\n      }\n      if (radioValue === GRAPH.radioValue.z) {\n        if (accelerationsData.z.length <= 3) {\n          !isEmpty && setIsEmpty(true)\n        }\n        return accelerationsData.z\n      }\n    }\n\n    if (displacementsData && activeTab === GRAPH.tabKey.displacements) {\n      if (radioValue === GRAPH.radioValue.x) {\n        if (displacementsData.x.length <= 3) {\n          !isEmpty && setIsEmpty(true)\n        }\n        return displacementsData.x\n      }\n      if (radioValue === GRAPH.radioValue.y) {\n        if (displacementsData.y.length <= 3) {\n          !isEmpty && setIsEmpty(true)\n        }\n        return displacementsData.y\n      }\n      if (radioValue === GRAPH.radioValue.z) {\n        if (displacementsData.z.length <= 3) {\n          !isEmpty && setIsEmpty(true)\n        }\n        return displacementsData.z\n      }\n    }\n\n    if (velocitiesData && activeTab === GRAPH.tabKey.velocities) {\n      if (radioValue === GRAPH.radioValue.x) {\n        if (velocitiesData.x.length <= 3) {\n          setIsEmpty(true)\n        }\n        return velocitiesData.x\n      }\n      if (radioValue === GRAPH.radioValue.y) {\n        if (velocitiesData.x.length <= 3) {\n          setIsEmpty(true)\n        }\n        return velocitiesData.y\n      }\n      if (radioValue === GRAPH.radioValue.z) {\n        if (velocitiesData.x.length <= 3) {\n          setIsEmpty(true)\n        }\n        return velocitiesData.z\n      }\n    }\n    return null\n  }\n\n  function handleHideValidResults(switchMode) {\n    setShouldDisplayValidData(switchMode)\n  }\n\n  function renderTabContent() {\n    const shouldDisplayBtn = isSensorBelongsToLeftTigh\n        && radioValue === GRAPH.radioValue.x\n        && activeTab === GRAPH.tabKey.accelerations\n    return (\n      <>\n        <div className=\"container-header\">\n          { !isEmpty && (\n          <>\n            {shouldDisplayBtn && (\n            <div className=\"hide-btn\">\n              <label>{GRAPH.switchLabelText}</label>\n              <Switch className=\"switch\" defaultChecked={shouldDisplayValidData} onClick={handleHideValidResults} />\n            </div>\n            )}\n            <Radio.Group className=\"radio-container\" onChange={handleRadioClick}>\n              <Radio\n                value=\"x\"\n                checked={radioValue === GRAPH.radioValue.x}\n              >\n                <span>Show X</span>\n              </Radio>\n              <Radio\n                value=\"y\"\n                checked={radioValue === GRAPH.radioValue.y}\n              >\n                Show Y\n              </Radio>\n              <Radio\n                value=\"z\"\n                checked={radioValue === GRAPH.radioValue.z}\n              >\n                Show Z\n              </Radio>\n            </Radio.Group>\n          </>\n          )}\n        </div>\n        { isEmpty ? (\n          <div className=\"empty-container\">\n            <Empty className=\"empty-data\" description={<span>No data for this graph at the moment</span>} />\n          </div>\n        ) : (\n          <Chart\n            width=\"100%\"\n            height=\"94%\"\n            chartType=\"LineChart\"\n            loader={<Spin className=\"loading-section\" />}\n            data={getData()}\n            options={{\n              hAxis: {\n                title: 'Time stamps',\n              },\n              vAxis: {\n                title: 'find the right string here',\n              },\n              series: {\n                1: { curveType: 'function' },\n              },\n            }}\n          />\n        )}\n      </>\n    )\n  }\n\n\n  return (\n    <div className=\"graph-container\">\n      <Tabs onTabClick={handleTabClick}>\n        <TabPane tab=\"Accelerations\" key={GRAPH.tabKey.accelerations}>\n          {renderTabContent()}\n        </TabPane>\n        <TabPane tab=\"Displacements\" key={GRAPH.tabKey.displacements}>\n          {renderTabContent()}\n        </TabPane>\n        <TabPane tab=\"Velocities\" key={GRAPH.tabKey.velocities}>\n          {renderTabContent()}\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\nexport default GraphContainer\n\n\nGraphContainer.propTypes = {\n  sensor: PropTypes.objectOf(PropTypes.any).isRequired,\n}\n","import GraphContainer from './GraphContainer'\n\nexport default GraphContainer\n","import React, { useEffect, useState } from 'react'\nimport {\n  Spin, Select, Button, Modal as AntModal,\n} from 'antd'\nimport PropTypes from 'prop-types'\nimport GraphContainer from 'containers/TestPage/components/GraphContainer'\nimport { OverlayContext } from 'App'\nimport 'containers/TestPage/testPage.scss'\n\n\nconst TestPage = (props) => {\n  const {\n    gaitModel,\n    loadingGaitModel,\n    getGaitModelByTestId,\n    testId,\n    cleanGaitModel,\n  } = props\n\n  const [selectedOption, setSelectedOption] = useState('sensor1')\n  const [sensor1, setSensor1] = useState(null)\n  const [sensor2, setSensor2] = useState(null)\n  const [sensor3, setSensor3] = useState(null)\n  const [sensor4, setSensor4] = useState(null)\n  const [sensor5, setSensor5] = useState(null)\n  const [sensor6, setSensor6] = useState(null)\n  const [sensor7, setSensor7] = useState(null)\n  const [shouldOpenModal, setShouldOpenModal] = useState(false)\n  const [graphDisplayContent, setGraphDisplayContent] = useState({ tab: '1', radio: 'x' })\n\n\n  useEffect(() => {\n    getGaitModelByTestId(testId)\n    return () => { cleanGaitModel() }\n  }, [])\n\n  useEffect(() => {\n    if (gaitModel) {\n      Object.keys(gaitModel).map((key) => generateSensorsData(key))\n    }\n  }, gaitModel)\n\n  function renderSelect() {\n    return (\n      <Select className=\"graph-select\" defaultValue=\"Sensor 1- Right Ankle\" onChange={handleSelectChange}>\n        <Select.Option value=\"sensor1\">Sensor 1- Right Ankle</Select.Option>\n        <Select.Option value=\"sensor2\">Sensor 2- Left Ankle</Select.Option>\n        <Select.Option value=\"sensor3\">Sensor 3- Right Knee</Select.Option>\n        <Select.Option value=\"sensor4\">Sensor 4- Left Knee</Select.Option>\n        <Select.Option value=\"sensor5\">Sensor 5- Right Right</Select.Option>\n        <Select.Option value=\"sensor6\">Sensor 6- Left Left</Select.Option>\n        <Select.Option value=\"sensor7\">Sensor 7- Center of mass</Select.Option>\n      </Select>\n    )\n  }\n\n  function handleSelectChange(val) {\n    setSelectedOption(val)\n  }\n\n  function generateSensorsData(key) {\n    if (key === 'testID' || key === 'id' || key === '_id' || key === '__v') return null\n    const accelerationX = []\n    const accelerationY = []\n    const accelerationZ = []\n\n    const displacementsX = []\n    const displacementsY = []\n    const displacementsZ = []\n\n    const velocitiesX = []\n    const velocitiesY = []\n    const velocitiesZ = []\n\n    gaitModel[key].accelerations.forEach((dataElement) => {\n      accelerationX.push({ x: dataElement.timeStamp, y: dataElement.x })\n      accelerationY.push({ x: dataElement.timeStamp, y: dataElement.y })\n      accelerationZ.push({ x: dataElement.timeStamp, y: dataElement.z })\n    })\n    gaitModel[key].displacements.forEach((dataElement) => {\n      displacementsX.push({ x: dataElement.timeStamp, y: dataElement.x })\n      displacementsY.push({ x: dataElement.timeStamp, y: dataElement.y })\n      displacementsZ.push({ x: dataElement.timeStamp, y: dataElement.z })\n    })\n    gaitModel[key].velocities.forEach((dataElement) => {\n      velocitiesX.push({ x: dataElement.timeStamp, y: dataElement.x })\n      velocitiesY.push({ x: dataElement.timeStamp, y: dataElement.y })\n      velocitiesZ.push({ x: dataElement.timeStamp, y: dataElement.z })\n    })\n\n    const tmpObj = {\n      accelerations: {\n        x: accelerationX,\n        y: accelerationY,\n        z: accelerationZ,\n      },\n      displacements: {\n        x: displacementsX,\n        y: displacementsY,\n        z: displacementsZ,\n      },\n      velocities: {\n        x: velocitiesX,\n        y: velocitiesY,\n        z: velocitiesZ,\n      },\n      report: gaitModel[key].report,\n    }\n    switch (key) {\n      case 'sensor1': {\n        setSensor1(tmpObj)\n        break\n      }\n      case 'sensor2': {\n        setSensor2(tmpObj)\n        break\n      }\n      case 'sensor3': {\n        setSensor3(tmpObj)\n        break\n      }\n      case 'sensor4': {\n        setSensor4(tmpObj)\n        break\n      }\n      case 'sensor5': {\n        setSensor5(tmpObj)\n        break\n      }\n      case 'sensor6': {\n        setSensor6(tmpObj)\n        break\n      }\n      case 'sensor7': {\n        setSensor7(tmpObj)\n        break\n      }\n      default: {\n        setSensor1(tmpObj)\n      }\n    }\n  }\n\n  function getSensor() {\n    switch (selectedOption) {\n      case 'sensor1': {\n        return sensor1\n      }\n      case 'sensor2': {\n        return sensor2\n      }\n      case 'sensor3': {\n        return sensor3\n      }\n      case 'sensor4': {\n        return sensor4\n      }\n      case 'sensor5': {\n        return sensor5\n      }\n      case 'sensor6': {\n        return sensor6\n      }\n      case 'sensor7': {\n        return sensor7\n      }\n      default: {\n        return sensor1\n      }\n    }\n  }\n\n  function handleOpenReport() {\n    setShouldOpenModal(true)\n  }\n\n  function handleOnCancelModal() {\n    setShouldOpenModal(false)\n  }\n\n  return (\n    <>\n      {!gaitModel || loadingGaitModel ? (\n        <div className=\"loading-test\">\n          <Spin />\n          <h3>it might take up to one minute..</h3>\n        </div>\n      ) : (\n        <>\n          <AntModal\n            className=\"report-modal\"\n            visible={shouldOpenModal}\n            title=\"Report Description:\"\n            onCancel={handleOnCancelModal}\n            destroyOnClose\n            footer={<Button type=\"primary\" onClick={handleOnCancelModal}>OK</Button>}\n          >\n            <p>{getSensor().report || 'No relevant report at the moment'}</p>\n          </AntModal>\n          <div className=\"graph-page\">\n            <h1 className=\"test-title\">Gait model data</h1>\n            {renderSelect()}\n            <Button className=\"report-btn\" type=\"primary\" onClick={handleOpenReport}>Open Report</Button>\n            <GraphContainer\n              sensor={getSensor()}\n              isSensorBelongsToLeftTigh={selectedOption === 'sensor1'}\n              cleanGaitModel={cleanGaitModel}\n            />\n            {/* { && graphRadioVal === x} */}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\n\nexport default TestPage\n\n\nTestPage.propTypes = {\n  gaitModel: PropTypes.objectOf(PropTypes.any).isRequired,\n  loadingGaitModel: PropTypes.bool.isRequired,\n  getGaitModelByTestId: PropTypes.func.isRequired,\n  testId: PropTypes.string.isRequired,\n  cleanGaitModel: PropTypes.func.isRequired,\n}\n","import { connect } from 'react-redux'\nimport { getGaitModelByTestId, cleanGaitModel } from 'redux/gaitModel/actionsCreator'\nimport TestPage from 'containers/TestPage/TestPage'\n\nconst mapStateToProps = (state) => ({\n  gaitModel: state.gaitModelReducer.gaitModel,\n  loadingGaitModel: state.gaitModelReducer.loadingGaitModel,\n})\n\nconst mapDispatchToProps = { getGaitModelByTestId, cleanGaitModel }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPage)\n","import { get } from 'utils/fetch'\nimport * as ActionTypes from './actionTypes'\n\n\nexport const getGaitModelByTestId = (testId) => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_TRUE })\n  try {\n    const response = await get(`patientGaitModel/${testId}`)\n    dispatch({\n      type: ActionTypes.FETCH_GAIT_MODEL_BY_TEST_ID_SUCCESS,\n      payload: response.data,\n    })\n  } catch (err) {\n    console.log('err: ', err)\n  }\n  dispatch({ type: ActionTypes.FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_FALSE })\n}\n\nexport const cleanGaitModel = () => dispatch => dispatch({type: ActionTypes.CLEAN_GAIT_MODEL})\n","export const FETCH_GAIT_MODEL_BY_TEST_ID_SUCCESS = 'FETCH_GAIT_MODEL_BY_TEST_ID_SUCCESS'\nexport const FETCH_GAIT_MODEL_BY_TEST_ID_FAILURE = 'FETCH_GAIT_MODEL_BY_TEST_ID_FAILURE'\nexport const FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_TRUE = 'FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_TRUE'\nexport const FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_FALSE = 'FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_FALSE'\nexport const CLEAN_GAIT_MODEL = 'CLEAN_GAIT_MODEL'\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport pathsNames from '../../router/pathNames'\nimport TestsTable from './components/TestsTable/TestsTable'\nimport './tests.scss'\nimport { Route, Switch } from 'react-router-dom'\nimport TestPage from 'containers/TestPage'\n\nconst Tests = (props) => {\n  const {\n    location,\n    history,\n    getAllPatients,\n    getAllTests,\n    allPatients,\n    allTests,\n    loadingAllTests,\n  } = props\n\n  const [selectedTestId, setSelectedTestId] = useState('')\n\n  useEffect(() => {\n    if (location.pathname !== pathsNames.patientsTests) {\n      history.push(pathsNames.patientsTests)\n    }\n    getAllPatients()\n    getAllTests()\n  }, [])\n\n  function handleTableRowClick(testObj) {\n    setSelectedTestId(testObj.testId)\n    history.push(`${pathsNames.patientsTests}${testObj.testId}`)\n  }\n\n  function handleBackClick() {\n    history.goBack()\n    setSelectedTestId('')\n  }\n\n\n  function renderTestsTable() {\n    return (\n      <div className=\"patient-tests-container\">\n        <TestsTable\n          allPatients={allPatients}\n          allTests={allTests}\n          loadingAllTests={loadingAllTests}\n          handleTableRowClick={handleTableRowClick}\n        />\n      </div>\n    )\n  }\n\n  function renderTestPage() {\n    return (\n      <div className=\"patients-page\">\n        <div className=\"patient-page\">\n          <TestPage history={history} testId={selectedTestId} handleBackClick={handleBackClick} />\n        </div>\n      </div>\n    )\n  }\n\n\n  return (\n    <>\n      <Switch>\n        <Route\n          path={pathsNames.patientsTests}\n          exact\n          render={renderTestsTable}\n        />\n        { selectedTestId && (\n        <Route\n          path={`${pathsNames.patientsTests}:${selectedTestId}`}\n          render={renderTestPage}\n        />\n        ) }\n      </Switch>\n    </>\n  )\n}\n\nexport default Tests\n\n\nTests.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  getAllPatients: PropTypes.func.isRequired,\n  getAllTests: PropTypes.func.isRequired,\n  allPatients: PropTypes.arrayOf(PropTypes.any).isRequired,\n  allTests: PropTypes.arrayOf(PropTypes.any).isRequired,\n  loadingAllTests: PropTypes.bool.isRequired,\n}\n","import { get, post } from 'utils/fetch'\nimport { API } from 'utils/consts'\nimport * as ActionTypes from './actionTypes'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getAllPatients = () => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_ALL_PATIENTS_SET_LOADING_TRUE })\n  try {\n    const response = await get('patient')\n    dispatch({\n      type: ActionTypes.FETCH_ALL_PATIENTS_SUCCESS,\n      payload: response.data,\n    })\n  } catch (err) {\n    dispatch({ type: ActionTypes.FETCH_ALL_PATIENTS_FAILURE })\n    console.log('error: ', err)\n  }\n  dispatch({ type: ActionTypes.FETCH_ALL_PATIENTS_SET_LOADING_FALSE })\n}\n\nexport const createPatient = (formData) => async (dispatch) => {\n  dispatch({ type: ActionTypes.CREATE_PATIENT_SET_LOADING_TRUE })\n  try {\n    const { data, status } = await post(API.patientEndpoint, formData)\n    if (status >= 200 && status < 300) {\n      dispatch({\n        type: ActionTypes.CREATE_PATIENT_SUCCESS,\n        payload: data,\n      })\n      dispatch({ type: ActionTypes.CREATE_PATIENT_SET_LOADING_FALSE })\n      return API.postRequestSuccess\n    }\n  } catch (err) {\n    dispatch({ type: ActionTypes.CREATE_PATIENT_SET_LOADING_FALSE })\n    console.log('err: ', err)\n  }\n  dispatch({ type: ActionTypes.CREATE_PATIENT_SET_LOADING_FALSE })\n}\n","export const FETCH_ALL_PATIENTS_SUCCESS = 'FETCH_ALL_PATIENTS_SUCCESS'\nexport const FETCH_ALL_PATIENTS_FAILURE = 'FETCH_ALL_PATIENTS_FAILURE'\nexport const FETCH_ALL_PATIENTS_SET_LOADING_TRUE = 'FETCH_ALL_PATIENTS_SET_LOADING_TRUE'\nexport const FETCH_ALL_PATIENTS_SET_LOADING_FALSE = 'FETCH_ALL_PATIENTS_SET_LOADING_FALSE'\n\nexport const CREATE_PATIENT_SUCCESS = 'CREATE_PATIENT_SUCCESS'\nexport const CREATE_PATIENT_FALSE = 'CREATE_PATIENT_FALSE'\nexport const CREATE_PATIENT_SET_LOADING_TRUE = 'CREATE_PATIENT_SET_LOADING_TRUE'\nexport const CREATE_PATIENT_SET_LOADING_FALSE = 'CREATE_PATIENT_SET_LOADING_FALSE'\n","import { get } from 'utils/fetch'\nimport * as ActionTypes from './actionTypes'\n\n\nexport const getAllTests = () => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_All_TESTS_SET_LOADING_TRUE })\n  try {\n    const response = await get('test')\n    dispatch({\n      type: ActionTypes.FETCH_ALL_TESTS_SUCCESS,\n      payload: response.data.reverse(),\n    })\n  } catch (err) {\n    console.log('error: ', err)\n  }\n  dispatch({ type: ActionTypes.FETCH_All_TESTS_SET_LOADING_FALSE })\n}\n\nexport const getTestsById = (id) => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_TESTS_BY_ID_SET_LOADING_TRUE })\n  try {\n    const response = await get(`test/patient/${id}`)\n    dispatch({\n      type: ActionTypes.FETCH_TESTS_BY_ID_SUCCESS,\n      payload: response.data.reverse(),\n    })\n  } catch (e) {\n    console.log('e: ', e)\n  }\n  dispatch({ type: ActionTypes.FETCH_TESTS_BY_ID_SET_LOADING_FALSE })\n}\n\nexport const cleanTestsById = () => (dispatch) => {\n  dispatch({\n    type: ActionTypes.CLEAN_TESTS_BY_ID,\n  })\n}\n","export const FETCH_ALL_TESTS_SUCCESS = 'FETCH_ALL_TESTS_SUCCESS';\nexport const FETCH_All_TESTS_SET_LOADING_TRUE = 'FETCH_All_TESTS_SET_LOADING_TRUE';\nexport const FETCH_All_TESTS_SET_LOADING_FALSE = 'FETCH_All_TESTS_SET_LOADING_FALSE';\n\nexport const FETCH_TESTS_BY_ID_SUCCESS = 'FETCH_TESTS_BY_ID_SUCCESS';\nexport const CLEAN_TESTS_BY_ID = 'CLEAN_TESTS_BY_ID';\nexport const FETCH_TESTS_BY_ID_SET_LOADING_TRUE = 'FETCH_TESTS_BY_ID_SET_LOADING_TRUE';\nexport const FETCH_TESTS_BY_ID_SET_LOADING_FALSE = 'FETCH_TESTS_BY_ID_SET_LOADING_FALSE';\n","import { connect } from 'react-redux';\nimport Tests from './Tests';\nimport { getAllPatients } from 'redux/patients/actionsCreator';\nimport { getAllTests } from 'redux/tests/actionsCreator';\n\nconst mapStateToProps = (state) => ({\n  allPatients: state.patientsReducer.allPatients,\n  allTests: state.testsReducer.allTests,\n  loadingAllTests: state.testsReducer.loadingAllTests,\n});\n\nconst mapDispatchToProps = { getAllPatients, getAllTests };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tests);\n","import Modal from \"./Modal\";\n\nexport default Modal","import React, { useEffect } from 'react'\nimport { Modal as AntModal, Spin, Result } from 'antd'\nimport Logo from 'components/SideBar/files/logo.svg'\nimport './modal.scss'\nimport { OverlayContext } from 'App'\n\nconst Modal = (props) => {\n  const {\n    FormToRender,\n    handleFormSubmit,\n    handleOnCancel,\n    formTitle,\n    formDescription,\n    isLoading,\n    didPostRequestSucceed,\n    setDidPostRequestSucceed,\n    dataToEdit = null,\n    allDefaultPlans = null,\n    allVideos = null,\n    patientId,\n    therapistId,\n    type = 'data',\n    modalWidth = 660,\n    ...rest\n  } = props\n\n  useEffect(() => {\n    didPostRequestSucceed\n      && setTimeout(async () => {\n        setDidPostRequestSucceed(false)\n      }, 1000)\n  }, [didPostRequestSucceed])\n\n  function renderLoading() {\n    return (\n      <div className=\"loading-modal\">\n        <Spin />\n        <h4>{`creating ${type}...`}</h4>\n      </div>\n    )\n  }\n\n  function renderSuccessMessage() {\n    return (\n      <Result\n        status=\"success\"\n        subTitle=\"video was created successfully\"\n      />\n    )\n  }\n\n  function handleModalClose(toggleOverlay, didUserForceCancel = false) {\n    didUserForceCancel && handleOnCancel()\n    toggleOverlay(false)\n  }\n\n\n  return (\n    <OverlayContext.Consumer>\n      {({ toggleOverlay }) => (\n        <AntModal\n          className=\"modal-container\"\n          width={modalWidth}\n          footer={null}\n          mask={false}\n          afterClose={() => handleModalClose(toggleOverlay)}\n          onCancel={() => handleModalClose(toggleOverlay, true)}\n          destroyOnClose\n          {...rest}\n        >\n          <aside>\n            <img src={Logo} alt=\"logo\" />\n          </aside>\n          <div className=\"form-wrapper\">\n            { isLoading || didPostRequestSucceed ? (\n              <>\n                {isLoading && renderLoading()}\n                {didPostRequestSucceed && renderSuccessMessage()}\n              </>\n            ) : (\n              <FormToRender\n                formTitle={formTitle}\n                formDescription={formDescription}\n                handleFormSubmit={handleFormSubmit}\n                patientId={patientId}\n                therapistId={therapistId}\n                dataToEdit={dataToEdit || null}\n                allDefaultPlans={allDefaultPlans || null}\n                allVideos={allVideos || null}\n              />\n            )}\n          </div>\n        </AntModal>\n      )}\n    </OverlayContext.Consumer>\n  )\n}\n\nexport default Modal\n","import PatientForm from './PatientForm'\n\nexport default PatientForm","import React, { useEffect, useRef } from 'react'\nimport {\n  Form, Input, Button, InputNumber, Radio,\n} from 'antd'\nimport '../form.scss'\n\nconst PatientForm = ({ handleFormSubmit, formTitle, formDescription }) => {\n\n  const nameInputRef = useRef(null)\n\n  useEffect(() => {\n    nameInputRef.current.focus()\n  }, [])\n\n  function handleFinish(formData) {\n    handleFormSubmit(formData)\n  }\n  return (\n    <Form className=\"form\" layout=\"vertical\" onFinish={handleFinish}>\n      <div className=\"tab-content-container\">\n        <h1>{formTitle}</h1>\n        <p>{formDescription}</p>\n        <Form.Item\n          label=\"patient name:\"\n          name=\"name\"\n          rules={\n                [\n                  { required: true, message: 'Patient name is required' },\n                  { required: true, min: 3, message: 'Name should contain at least 3 characters' },\n                ]\n              }\n        >\n          <Input className=\"form-input\" ref={nameInputRef} />\n        </Form.Item>\n        <Form.Item\n          rules={\n                [\n                  { required: true, message: 'email is required' },\n                  { required: true, type: 'email', message: 'Please enter a valid email address' },\n                ]\n              }\n          label=\"patient email:\"\n          name=\"mail\"\n        >\n          <Input className=\"form-input\" />\n        </Form.Item>\n        <Form.Item\n          label=\"patient password:\"\n          name=\"password\"\n          rules={\n              [\n                { required: true, message: 'password is required' },\n                { required: true, min: 6, message: 'password has to be at least 6 characters' },\n              ]\n            }\n        >\n          <Input.Password className=\"form-input\" />\n        </Form.Item>\n        <Form.Item\n          label=\"patient phone number:\"\n          name=\"phoneNumber\"\n          rules={\n            [\n              { required: true, message: 'phone number is required' },\n              { required: true, pattern: '^\\\\d{10}$', message: 'phone number should contain exactly 10 numbers' },\n            ]\n          }\n        >\n          <Input className=\"form-input\" />\n        </Form.Item>\n        <Form.Item\n          label=\"patient picture:\"\n          name=\"picture\"\n          rules={\n              [\n                { required: true, message: 'Patient picture is required' },\n              ]\n            }\n        >\n          <Input className=\"form-input\" />\n        </Form.Item>\n        <Form.Item\n          label=\"gender:\"\n          name=\"gender\"\n        >\n          <Radio.Group>\n            <Radio value=\"male\">Male</Radio>\n            <Radio value=\"female\">Female</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          label=\"patient's age:\"\n          name=\"age\"\n          rules={\n            [\n              { required: true, message: 'Patient age is required' },\n            ]\n          }\n        >\n          <InputNumber className=\"form-input\" min={18} defaultValue={18} />\n        </Form.Item>\n      </div>\n      <Form.Item className=\"save-btn-container\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PatientForm\n","import * as ActionTypes from './actionTypes'\nconst initialState = {\n  gaitModel: null,\n  loadingGaitModel: false,\n}\n\nconst gaitModelReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_GAIT_MODEL_BY_TEST_ID_SUCCESS:\n      return {\n        ...state,\n        gaitModel: action.payload,\n      }\n\n    case ActionTypes.FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingGaitModel: true,\n      }\n\n    case ActionTypes.FETCH_GAIT_MODEL_BY_TEST_ID_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingGaitModel: false,\n      }\n\n    case ActionTypes.CLEAN_GAIT_MODEL:\n      return {\n        ...state,\n        gaitModel: null,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default gaitModelReducer\n","import * as ActionTypes from './actionTypes'\n\nconst initialState = {\n  allPatients: [],\n  loadingAllPatients: false,\n  loadingCreatePatient: false,\n}\n\nconst patientsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_ALL_PATIENTS_SUCCESS:\n      return {\n        ...state,\n        allPatients: action.payload,\n      }\n\n    case ActionTypes.FETCH_ALL_PATIENTS_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingAllPatients: true,\n      }\n\n    case ActionTypes.FETCH_ALL_PATIENTS_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingAllPatients: false,\n      }\n\n    case ActionTypes.CREATE_PATIENT_SUCCESS:\n      return {\n        ...state,\n        allPatients: [action.payload, ...state.allPatients],\n      }\n\n    case ActionTypes.CREATE_PATIENT_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingCreatePatient: true,\n      }\n\n    case ActionTypes.CREATE_PATIENT_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingCreatePatient: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default patientsReducer\n","import {\n  FETCH_ALL_TESTS_SUCCESS,\n  // eslint-disable-next-line camelcase\n  FETCH_All_TESTS_SET_LOADING_TRUE,\n  // eslint-disable-next-line camelcase\n  FETCH_All_TESTS_SET_LOADING_FALSE,\n  FETCH_TESTS_BY_ID_SUCCESS,\n  CLEAN_TESTS_BY_ID,\n  FETCH_TESTS_BY_ID_SET_LOADING_TRUE,\n  FETCH_TESTS_BY_ID_SET_LOADING_FALSE,\n} from './actionTypes';\n\nconst initialState = {\n  allTests: [],\n  loadingAllTests: false,\n  allTestsById: [],\n  loadingAllTestsById: false,\n};\n\nconst testsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_TESTS_SUCCESS:\n      return {\n        ...state,\n        allTests: action.payload,\n      };\n\n      // eslint-disable-next-line camelcase\n    case FETCH_All_TESTS_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingAllTests: true,\n      };\n\n      // eslint-disable-next-line camelcase\n    case FETCH_All_TESTS_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingAllTests: false,\n      };\n\n    case FETCH_TESTS_BY_ID_SUCCESS:\n      return {\n        ...state,\n        allTestsById: action.payload,\n      };\n\n    case CLEAN_TESTS_BY_ID: {\n      return {\n        ...state,\n        allTestsById: [],\n      };\n    }\n\n    case FETCH_TESTS_BY_ID_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingAllTestsById: true,\n      };\n\n    case FETCH_TESTS_BY_ID_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingAllTestsById: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default testsReducer;\n","import * as ActionTypes from './actionTypes'\n\nconst initialState = {\n  planById: null,\n  loadingPlanById: true,\n  loadingEditPlan: false,\n}\n\nconst plansReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PLAN_BY_ID_SUCCESS:\n      return {\n        ...state,\n        planById: action.payload,\n      }\n\n    case ActionTypes.FETCH_PLAN_BY_ID_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingPlanById: true,\n      }\n\n    case ActionTypes.FETCH_PLAN_BY_ID_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingPlanById: false,\n      }\n\n    case ActionTypes.CREATE_PLAN_SUCCESS:\n      return {\n        ...state,\n        planById: { ...action.payload },\n      }\n    case ActionTypes.EDIT_PLAN_BY_ID_SUCCESS:\n      return {\n        ...state,\n        planById: { ...action.payload },\n      }\n\n    case ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingEditPlan: true,\n      }\n\n    case ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingEditPlan: false,\n      }\n\n\n    default:\n      return state\n  }\n}\n\nexport default plansReducer\n","export const FETCH_PLAN_BY_ID_SUCCESS = 'FETCH_PLAN_BY_ID'\nexport const FETCH_PLAN_BY_ID_SET_LOADING_TRUE = 'FETCH_PLAN_BY_ID_SET_LOADING_TRUE'\nexport const FETCH_PLAN_BY_ID_SET_LOADING_FALSE = 'FETCH_PLAN_BY_ID_SET_LOADING_FALSE'\n\nexport const CREATE_PLAN_SUCCESS = 'CREATE_PLAN_SUCCESS'\n\nexport const EDIT_PLAN_BY_ID_SUCCESS = 'EDIT_PLAN_BY_ID_SUCCESS'\nexport const EDIT_PLAN_BY_ID_SET_LOADING_TRUE = 'EDIT_PLAN_BY_ID_SET_LOADING_TRUE'\nexport const EDIT_PLAN_BY_ID_SET_LOADING_FALSE = 'EDIT_PLAN_BY_ID_SET_LOADING_FALSE'\n","import * as ActionTypes from './actionTypes'\n\nconst initialState = {\n  allDefaultPlans: [],\n  loadingAllDefaultPlans: true,\n  loadingCreateDefaultPlan: false,\n}\n\nconst defaultPlansReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_ALL_DEFAULT_PLANS_SUCCESS:\n      return {\n        ...state,\n        allDefaultPlans: action.payload,\n      }\n\n    case ActionTypes.FETCH_ALL_DEFAULT_PLANS_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingAllDefaultPlans: true,\n      }\n\n    case ActionTypes.FETCH_ALL_DEFAULT_PLANS_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingAllDefaultPlans: false,\n      }\n\n    case ActionTypes.CREATE_DEFAULT_SUCCESS:\n      return {\n        ...state,\n        allDefaultPlans: [action.payload, ...state.allDefaultPlans],\n      }\n\n    case ActionTypes.CREATE_DEFAULT_PLAN_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingCreateDefaultPlan: true,\n      }\n\n    case ActionTypes.CREATE_DEFAULT_PLAN_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingCreateDefaultPlan: false,\n      }\n\n    case ActionTypes.DELETE_DEFAULT_PLAN_SUCCESS:\n      return {\n        ...state,\n        allDefaultPlans: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default defaultPlansReducer\n","export const FETCH_ALL_DEFAULT_PLANS_SUCCESS = 'FETCH_ALL_DEFAULT_PLANS_SUCCESS'\nexport const FETCH_ALL_DEFAULT_PLANS_FAILURE = 'FETCH_ALL_DEFAULT_PLANS_FAILURE'\nexport const FETCH_ALL_DEFAULT_PLANS_SET_LOADING_TRUE = 'FETCH_ALL_DEFAULT_PLANS_SET_LOADING_TRUE'\nexport const FETCH_ALL_DEFAULT_PLANS_SET_LOADING_FALSE = 'FETCH_ALL_DEFAULT_PLANS_SET_LOADING_FALSE'\n\n\nexport const CREATE_DEFAULT_SUCCESS = 'CREATE_DEFAULT_SUCCESS'\nexport const CREATE_DEFAULT_PLAN_SET_LOADING_TRUE = 'CREATE_DEFAULT_PLAN_SET_LOADING_TRUE'\nexport const CREATE_DEFAULT_PLAN_SET_LOADING_FALSE = 'CREATE_DEFAULT_PLAN_SET_LOADING_FALSE'\n\n\nexport const DELETE_DEFAULT_PLAN_SUCCESS = 'DELETE_DEFAULT_PLAN_SUCCESS'\n","import * as ActionTypes from './actionTypes'\nconst initialState = {\n  allVideos: [],\n  loadingAllVideos: true,\n  loadingCreateVideo: false,\n}\n\nconst videosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_ALL_VIDEOS_SUCCESS:\n      return {\n        ...state,\n        allVideos: action.payload,\n      }\n\n    case ActionTypes.FETCH_ALL_VIDEOS_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingAllVideos: true,\n      }\n\n    case ActionTypes.FETCH_ALL_VIDEOS_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingAllVideos: false,\n      }\n\n    case ActionTypes.CREATE_VIDEO_SUCCESS:\n      return {\n        ...state,\n        allVideos: [action.payload, ...state.allVideos],\n      }\n\n    case ActionTypes.CREATE_VIDEO_SET_LOADING_TRUE:\n      return {\n        ...state,\n        loadingCreateVideo: true,\n      }\n\n    case ActionTypes.CREATE_VIDEO_SET_LOADING_FALSE:\n      return {\n        ...state,\n        loadingCreateVideo: false,\n      }\n\n    case ActionTypes.DELETE_VIDEO_SUCCESS:\n      return {\n        ...state,\n        allVideos: action.payload,\n      }\n\n\n    default:\n      return state\n  }\n}\n\nexport default videosReducer\n","export const FETCH_ALL_VIDEOS_SUCCESS = 'FETCH_ALL_VIDEOS_SUCCESS'\nexport const FETCH_ALL_VIDEOS_FAILURE = 'FETCH_ALL_VIDEOS_FAILURE'\nexport const FETCH_ALL_VIDEOS_SET_LOADING_TRUE = 'FETCH_ALL_VIDEOS_SET_LOADING_TRUE'\nexport const FETCH_ALL_VIDEOS_SET_LOADING_FALSE = 'FETCH_ALL_VIDEOS_SET_LOADING_FALSE'\n\nexport const CREATE_VIDEO_SUCCESS = 'CREATE_VIDEO_SUCCESS'\nexport const CREATE_VIDEO_SET_LOADING_TRUE = 'CREATE_VIDEO_SET_LOADING_TRUE'\nexport const CREATE_VIDEO_SET_LOADING_FALSE = 'CREATE_VIDEO_SET_LOADING_FALSE'\n\nexport const DELETE_VIDEO_SUCCESS = 'DELETE_VIDEO_SUCCESS'\n","import { MODAL } from 'utils/consts'\nimport * as ActionTypes from './actionTypes'\n\nconst initialState = {\n  errorObj: {\n    errorOccurred: false,\n    errorMessage: MODAL.defaultErrorDescription,\n  },\n}\n\nconst errorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.CREATE_ERROR_OBJ:\n      return {\n        ...state,\n        errorObj: {\n          errorOccurred: true,\n          errorMessage: action.payload.errorMessage,\n        },\n      }\n\n    case ActionTypes.CLEAN_ERROR_OBJ:\n      return {\n        ...state,\n        errorObj: {\n          errorOccurred: false,\n          errorMessage: MODAL.defaultErrorDescription,\n        },\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport gaitModelReducer from './gaitModel/reducer'\nimport authReducer from './auth/authReducer'\nimport patientsReducer from './patients/reducer'\nimport testsReducer from './tests/reducer'\nimport plansReducer from './plans/reducer'\nimport defaultPlansReducer from \"./defaultPlans/reducer\"\nimport videosReducer from './videos/reducer'\nimport errorReducer from './error/reducer'\n\nconst reducers = combineReducers({\n  authReducer,\n  errorReducer,\n  patientsReducer,\n  testsReducer,\n  gaitModelReducer,\n  plansReducer,\n  defaultPlansReducer,\n  videosReducer,\n})\n\nexport default reducers\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './index'\n\nconst initialState = {}\nconst middlewares = [thunk]\n\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middlewares))\n\nexport default store\n","import { del, get, post } from 'utils/fetch'\nimport { deepClone } from 'lodash'\nimport { API } from 'utils/consts'\nimport store from 'redux/store'\nimport * as ActionsType from 'redux/videos/actionTypes'\nimport * as ActionTypes from './actionTypes'\n\nexport const getAllDefaultPlans = () => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_ALL_DEFAULT_PLANS_SET_LOADING_TRUE })\n  try {\n    const response = await get('defaultPlan')\n    if (response.status === 200) {\n      dispatch({\n        type: ActionTypes.FETCH_ALL_DEFAULT_PLANS_SUCCESS,\n        payload: response.data.reverse(),\n      })\n    }\n  } catch (err) {\n    console.log('err: ', err)\n  }\n  dispatch({ type: ActionTypes.FETCH_ALL_DEFAULT_PLANS_SET_LOADING_FALSE })\n}\n\nexport const createDefaultPlan = (formData) => async (dispatch) => {\n  dispatch({ type: ActionTypes.CREATE_DEFAULT_PLAN_SET_LOADING_TRUE })\n  try {\n    const {\n      data: defaultPlanData,\n      status: statusCode,\n    } = await post(API.defaultPlansEndpoint, formData)\n\n    const addedDefaultPlanObj = {\n      id: defaultPlanData.id,\n      instructions: defaultPlanData.instructions,\n      name: defaultPlanData.name,\n      type: defaultPlanData.type,\n      videos: [...defaultPlanData.videos],\n    }\n\n    if (statusCode >= 200 && statusCode < 300) {\n      dispatch({ type: ActionTypes.CREATE_DEFAULT_PLAN_SET_LOADING_FALSE })\n      dispatch({\n        type: ActionTypes.CREATE_DEFAULT_SUCCESS,\n        payload: addedDefaultPlanObj,\n      })\n      return API.postRequestSuccess\n    }\n  } catch (err) {\n    dispatch({ type: ActionTypes.CREATE_DEFAULT_PLAN_SET_LOADING_FALSE })\n    console.log('catched error: ', err)\n    console.log('catched error: ', err.message)\n    return err\n  }\n}\n\n\nexport const deleteDefaultPlan = (idToDelte) => async (dispatch) => {\n  const arrOfDefaultPlans = [...store.getState().defaultPlansReducer.allDefaultPlans]\n\n  try {\n    const { status: statusCode } = await del(`${API.defaultPlansEndpoint}/${idToDelte}`)\n    // TODO:: CHANGE! should get 400+ when error, not 202\n    if (statusCode >= 200 && statusCode < 300 && statusCode !== 202) {\n      const newArrOfDefaultPlans = arrOfDefaultPlans.filter((plan) => plan.id !== idToDelte)\n      dispatch({\n        type: ActionTypes.DELETE_DEFAULT_PLAN_SUCCESS,\n        payload: newArrOfDefaultPlans,\n      })\n      return API.deleteRequestSuccess\n    }\n  } catch (err) {\n    console.log('catched error: ', err)\n  }\n}\n","import { get, post, del } from 'utils/fetch'\nimport { API } from 'utils/consts'\nimport store from '../store'\nimport * as ActionsType from './actionTypes'\n\n\nexport const getAllVideos = () => async (dispatch) => {\n  dispatch({ type: ActionsType.FETCH_ALL_VIDEOS_SET_LOADING_TRUE })\n  try {\n    const response = await get('video')\n    dispatch({\n      type: ActionsType.FETCH_ALL_VIDEOS_SUCCESS,\n      payload: response.data.reverse(),\n    })\n  } catch (err) {\n    console.log('error: ', err)\n  }\n  dispatch({ type: ActionsType.FETCH_ALL_VIDEOS_SET_LOADING_FALSE })\n}\n\n\nexport const createVideo = (formData) => async (dispatch) => {\n  dispatch({ type: ActionsType.CREATE_VIDEO_SET_LOADING_TRUE })\n  try {\n    const { data: videoData, status: statusCode } = await post(API.videoEndpoint, formData)\n    const addedVideoObj = {\n      id: videoData.id,\n      link: videoData.link,\n      name: videoData.name,\n    }\n\n    if (statusCode >= 200 && statusCode < 300) {\n      dispatch({ type: ActionsType.CREATE_VIDEO_SET_LOADING_FALSE })\n      dispatch({\n        type: ActionsType.CREATE_VIDEO_SUCCESS,\n        payload: addedVideoObj,\n      })\n      return API.postRequestSuccess\n    }\n  } catch (err) {\n    dispatch({ type: ActionsType.CREATE_VIDEO_SET_LOADING_FALSE })\n    console.log('err: ', err)\n    return err\n  }\n}\n\nexport const deleteVideo = (idToDelte) => async (dispatch) => {\n  const arrOfVideo = [...store.getState().videosReducer.allVideos]\n  try {\n    const { status: statusCode } = await del(`${API.videoEndpoint}/${idToDelte}`)\n    if (statusCode >= 200 && statusCode < 300 && statusCode !== 202) {  // TODO:: CHANGE! should get 400+ when error, not 202\n      const newArrOfVideos = arrOfVideo.filter(video => video.id !== idToDelte)\n      dispatch({\n        type: ActionsType.DELETE_VIDEO_SUCCESS,\n        payload: newArrOfVideos,\n      })\n      return API.deleteRequestSuccess\n    }\n  } catch (e) {\n    console.log('e')\n  }\n}\n","import React, {\n  useEffect, useRef, useState, useForm,\n} from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Tabs,\n  Select,\n  InputNumber,\n} from 'antd'\nimport { cloneDeep } from 'lodash'\nimport classNames from 'classnames'\nimport '../form.scss'\nimport { MODAL, PLAN_FORM } from 'utils/consts'\n\nconst { TabPane } = Tabs\nconst { Option } = Select\n\nconst PlanForm = (props) => {\n  const {\n    formTitle,\n    formDescription,\n    dataToEdit,\n    handleFormSubmit,\n    allDefaultPlans,\n    allVideos,\n    patientId,\n    therapistId,\n  } = props\n\n  const [name, setNameField] = useState((dataToEdit && dataToEdit.name) || '')\n  const [instructions, setInstructionsField] = useState((dataToEdit && dataToEdit.instructions) || '')\n  const [videos, setVideosField] = useState((dataToEdit && dataToEdit.videos) || [])\n  const [defaultPlans, setDefaultPlansField] = useState((dataToEdit && dataToEdit.defaultPlans) || [])\n  const nameInputRef = useRef(null)\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    let normalizedVideosArr = [...videos]\n    normalizedVideosArr = normalizedVideosArr.map((video) => ({\n      videoID: video.videoID,\n      times: video.times,\n    }))\n    setVideosField(normalizedVideosArr)\n  }, [])\n\n  useEffect(() => {\n    nameInputRef.current.focus()\n    dataToEdit && dataToEdit.name && form.setFieldsValue({ name: dataToEdit.name })\n  }, [])\n\n  useEffect(() => {\n    dataToEdit && setNameField(dataToEdit.name)\n  }, [])\n\n\n  function handleFinish() {\n    let finalFormData\n    if (dataToEdit) {\n      finalFormData = {\n        name,\n        instructions,\n        videos: videos,\n        defaultPlanIDs: defaultPlans || [],\n      }\n    } else {\n      finalFormData = {\n        name,\n        instructions,\n        videos,\n        defaultPlans: defaultPlans || [],\n        patientID: patientId,\n        therapistID: therapistId,\n      }\n    }\n    handleFormSubmit(finalFormData)\n  }\n\n  function renderOption(defaultPlan, index) {\n    return (\n      <Option value={defaultPlan.id} key={index}>\n        {defaultPlan.name}\n      </Option>\n    )\n  }\n\n\n  function handleNameChange(field) {\n    setNameField(field.target.value)\n  }\n\n  function handleInstructionsChange(field) {\n    setInstructionsField(field.target.value)\n  }\n\n  function handleSelectChange(arrOfSelectedOptions) {\n    setDefaultPlansField(arrOfSelectedOptions)\n  }\n\n  function handleVideosClick(videoId, e) {\n    if (e.target.className !== '' && e.target.className !== 'label-container' && e.target.className !== 'name-label') return\n\n    let isVideoAlreadyInList = false\n    for (let i = 0; i < videos.length; i++) {\n      if (videos[i].videoID === videoId) {\n        isVideoAlreadyInList = true\n        break\n      }\n    }\n    let updatedVideosArr = [...videos]\n    if (isVideoAlreadyInList) {\n      updatedVideosArr = updatedVideosArr.filter(({ videoID }) => videoID !== videoId)\n    } else {\n      const tmpVideoObj = {\n        videoID: videoId,\n        times: 1,\n      }\n      updatedVideosArr.push(tmpVideoObj)\n    }\n    setVideosField(updatedVideosArr)\n  }\n\n  function handleNumberChange(videoId, inputValue) {\n    const updatedVideosArr = cloneDeep(videos)\n    for (let i = 0; i < updatedVideosArr.length; i++) {\n      if (updatedVideosArr[i].videoID === videoId) {\n        updatedVideosArr[i].times = inputValue\n        break\n      }\n    }\n    setVideosField(updatedVideosArr)\n  }\n\n\n  function renderVideo(video, index) {\n    let isSelected = false\n    let timesToSet = 1\n    for (let i = 0; i < videos.length; i++) {\n      if (videos[i].videoID === video.id) {\n        isSelected = true\n        timesToSet = videos[i].times\n      }\n    }\n    const videoClasses = classNames({\n      'video-box': true,\n      selected: isSelected,\n    })\n    return (\n      <div className={videoClasses} key={index} onClick={(e) => handleVideosClick(video.id, e)}>\n        <div className=\"label-container\">\n          <label className=\"name-label\">{video.name}</label>\n          { isSelected\n          && (\n          <div className=\"input-number-container\">\n            <label>times:</label>\n            <InputNumber\n              defaultValue={timesToSet}\n              min={1}\n              onChange={(e) => handleNumberChange(video.id, e)}\n              placeholder=\"Enter number of times\"\n            />\n          </div>\n          )}\n        </div>\n        <iframe height={150} width={400} src={video.link} />\n      </div>\n    )\n  }\n\n  return (\n    <Form className=\"form has-tabs\" layout=\"vertical\" onFinish={handleFinish} form={form}>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab={PLAN_FORM.planInfoTab} key=\"1\">\n          <div className=\"tab-content-container\">\n            <h1>{formTitle}</h1>\n            <p>{formDescription}</p>\n            <Form.Item\n              rules={[\n                { required: true, message: 'Plan name is required' },\n                { required: true, min: 3, message: 'Name should contain at least 3 characters' },\n              ]}\n              label={PLAN_FORM.nameLabel}\n              name=\"name\"\n              initialValue={(dataToEdit && dataToEdit.name) || ''}\n            >\n              <Input\n                className=\"form-input\"\n                defaultValue={(dataToEdit && dataToEdit.name) || ''}\n                onChange={handleNameChange}\n                ref={nameInputRef}\n              />\n            </Form.Item>\n            <Form.Item\n              label={PLAN_FORM.instructionsLabal}\n              name=\"instructions\"\n            >\n              <Input\n                className=\"form-input\"\n                defaultValue={(dataToEdit && dataToEdit.instructions !== MODAL.optionalPlaceholderToIgnore && dataToEdit.instructions) || ''}\n                onChange={handleInstructionsChange}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n        <TabPane tab={PLAN_FORM.videosAndPlansTab} key=\"2\">\n          <div className=\"tab-content-container\">\n            { !dataToEdit\n            && (\n            <Form.Item label={PLAN_FORM.defaultPlansLabel}>\n              <Select\n                defaultValue={(dataToEdit && dataToEdit.defaultPlans && [...dataToEdit.defaultPlans]) || []} // TODO:: normalize data so it can be shown in Select list. match it with the default plans list and take the relevant name\n                mode=\"multiple\"\n                style={{ width: '60%' }}\n                placeholder={PLAN_FORM.selectPlansPlaceholder}\n                onChange={handleSelectChange}\n              >\n                {allDefaultPlans.map(renderOption)}\n              </Select>\n            </Form.Item>\n            )}\n            <Form.Item label={PLAN_FORM.chooseVideosLabel}>\n              {allVideos.map(renderVideo)}\n            </Form.Item>\n          </div>\n        </TabPane>\n      </Tabs>\n      <Form.Item className=\"save-btn-container\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\n\nexport default PlanForm\n","import PlanForm from './PlanForm'\n\nexport default PlanForm","import PatientDataSection from './PatientDataSection'\n\nexport default PatientDataSection\n","import React from 'react'\nimport { Progress } from 'antd'\nimport PropTypes from 'prop-types'\nimport './patientDataSection.scss'\n\nconst PatientDataSection = ({ patient, planById, handleOpenModal }) => {\n  function calculatePercentage() {\n    if (planById) {\n      let totalTimes = 0\n      let totalTimesLeft = 0\n\n      planById.videos.forEach((video) => {\n        totalTimes += video.times\n        totalTimesLeft += video.timesLeft\n      })\n\n      if (totalTimes === totalTimesLeft) return 0\n      return Math.floor(Math.floor((totalTimesLeft / totalTimes) * 100))\n    }\n    return 0\n  }\n\n  function checkBarColor() {\n    return calculatePercentage() <= 50 ? 'red' : ''\n  }\n\n  return (\n    <div className=\"patient-data-section\">\n      <img src={patient.picture} alt=\"patient\" />\n      <div className=\"personal-details\">\n        <h2>Personal Details:</h2>\n        <h3>{patient.mail}</h3>\n        <h3>{patient.name}</h3>\n        <h3>{`${patient.age} Years old`}</h3>\n      </div>\n      <div className=\"plan-details\">\n        <h2>Rehabilitation details:</h2>\n        {planById ? (\n          <>\n            <h3>Starting date: 10-03-19</h3>\n            <Progress strokeColor={checkBarColor()} className=\"progress-bar\" type=\"circle\" percent={calculatePercentage()} width={80} />\n            <button type=\"button\" onClick={() => handleOpenModal('edit')}>Edit Plan</button>\n          </>\n        ) : (\n          <>\n            <h3>No plan at the moment</h3>\n            <button type=\"button\" onClick={() => handleOpenModal('new')}>Create a plan</button>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PatientDataSection\n\n\nPatientDataSection.propTypes = {\n  patient: PropTypes.objectOf(PropTypes.any).isRequired,\n  planById: PropTypes.objectOf(PropTypes.any).isRequired,\n}\n","import DetailsCard from './DetailsCard'\n\nexport default DetailsCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './detailsCard.scss'\n\nconst DetailsCard = ({ children, handleCardClick, id }) => {\n\n  function handleClick() {\n    handleCardClick(id)\n  }\n\n  return (\n    <div className=\"card-container\" onClick={handleClick}>\n      { children }\n    </div>\n  )\n}\n\nexport default DetailsCard\n\nDetailsCard.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleCardClick: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n}\n","import TestsSection from './TestsSection'\n\nexport default TestsSection\n","import React from 'react'\nimport { Empty } from 'antd'\nimport PropTypes from 'prop-types'\nimport './testsSection.scss'\nimport AbnormalityChip from 'components/AbnormalityChip'\nimport DetailsCard from 'components/DetailsCard/'\nimport { normalizeDate } from 'utils/date'\n\nconst TestsSection = (props) => {\n  const { allTestsById, handleTestClick, patientName } = props\n\n  function renderTestsList(test) {\n    const normalizedDate = normalizeDate(test.date, false)\n    const results = test.abnormality ? 'ABNORMALITY' : 'NORMAL'\n    const content = (\n      <>\n        <h4>\n          Date:\n          {normalizedDate}\n        </h4>\n        <AbnormalityChip results={results} />\n      </>\n    )\n    return (\n      <DetailsCard\n        key={Math.random()}\n        id={test.id}\n        handleCardClick={handleTestClick}\n      >\n        {content}\n      </DetailsCard>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"tests-section\">\n        <h1 className=\"tests-title\">\n          {patientName}'s Tests:\n          {allTestsById.length > 0 && <span>{` (total of ${allTestsById.length})`}</span>}\n        </h1>\n        { allTestsById.length !== 0 ? (\n          <div className=\"cards-container\">\n            {allTestsById.map(renderTestsList)}\n          </div>\n        ) : (\n          <div className=\"empty-container\">\n            <Empty className=\"empty-data\" description={<h3>No tests at the moment</h3>} />\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default TestsSection\n\nTestsSection.propTypes = {\n  allTestsById: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleTestClick: PropTypes.func.isRequired,\n}\n","import React, { useEffect, useState } from 'react'\nimport { Spin } from 'antd'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport './patientPage.scss'\nimport pathsNames from 'router/pathNames'\nimport TestPage from 'containers/TestPage'\nimport Modal from 'components/Modal'\nimport { OverlayContext } from 'App'\nimport PlanForm from 'components/Forms/PlanForm'\nimport { API } from 'utils/consts'\nimport PatientDataSection from '../PatientDataSection'\nimport TestsSection from '../TestsSection'\n\n\nconst PatientPage = (props) => {\n  const {\n    patient,\n    planById,\n    getTestsById,\n    getRehabPlanById,\n    history,\n    allTestsById,\n    cleanTestsById,\n    loadingAllTestsById,\n    loadingPlanById,\n    allDefaultPlans,\n    getAllDefaultPlans,\n    allVideos,\n    getAllVideos,\n    editPlan,\n    createPlan,\n    activateErrorModal,\n    loadingEditPlan,\n    therapistId,\n  } = props\n\n  const [clickedTestId, setClickedTestId] = useState('')\n  const [shouldOpenModal, setShouldOpenModal] = useState(false)\n  const [didPostRequestSucceed, setDidPostRequestSucceed] = useState(false)\n  const [modalMode, setModalMode] = useState('')\n\n\n  useEffect(() => {\n    getTestsById(patient.id)\n    getRehabPlanById(patient.rehabPlanID)\n    getAllDefaultPlans()\n    getAllVideos()\n    return cleanTestsById\n  }, [])\n\n  useEffect(() => {\n    if (clickedTestId) history.push(`${history.location.pathname}/${clickedTestId}`)\n  }, [clickedTestId])\n\n  function handleTestClick(testId) {\n    setClickedTestId(testId)\n  }\n\n  async function handleFormSubmit(formData) {\n    if (modalMode === 'edit') {\n      const editPlanResponse = await editPlan(formData, planById.id)\n      if (editPlanResponse === API.postRequestSuccess) {\n        setDidPostRequestSucceed(true)\n        setShouldOpenModal(false)\n      } else {\n        activateErrorModal(editPlanResponse && editPlanResponse.message)\n      }\n    } else if (modalMode === 'new') {\n      const createPlanResponse = await createPlan(formData)\n      if (createPlanResponse === API.postRequestSuccess) {\n        setDidPostRequestSucceed(true)\n        setShouldOpenModal(false)\n      } else {\n        activateErrorModal(createPlanResponse && createPlanResponse.message)\n      }\n    }\n  }\n\n  function handleOnCancelModal() {\n    setShouldOpenModal(false)\n  }\n\n  function handleOpenModal(mode, toggleOverlay) {\n    setModalMode(mode)\n    setShouldOpenModal(true)\n    toggleOverlay(true)\n  }\n\n  function renderPageSections() {\n    return (\n      <OverlayContext.Consumer>\n        {({ toggleOverlay }) => (\n          loadingAllTestsById || !allTestsById || loadingPlanById ? (\n            <div className=\"loading-patient\">\n              <Spin />\n            </div>\n          ) : (\n            <>\n              <Modal\n                modalWidth={700}\n                handleFormSubmit={(formData) => handleFormSubmit(formData)}\n                handleOnCancel={handleOnCancelModal}\n                visible={shouldOpenModal || didPostRequestSucceed}\n                type=\"plan\"\n                formTitle={modalMode === 'edit' ? \"Edit patient's plan\" : \"Create patient's plan\"}\n                formDescription=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim consequat.\"\n                FormToRender={PlanForm}\n                patientId={patient.id}\n                therapistId={therapistId}\n                dataToEdit={modalMode === 'edit' && planById}\n                allDefaultPlans={allDefaultPlans}\n                allVideos={allVideos}\n                isLoading={loadingEditPlan}\n                didPostRequestSucceed={didPostRequestSucceed}\n                setDidPostRequestSucceed={setDidPostRequestSucceed}\n              />\n              <PatientDataSection\n                patient={patient}\n                history={history}\n                planById={planById}\n                handleOpenModal={(mode) => handleOpenModal(mode, toggleOverlay)}\n              />\n              <hr />\n              <TestsSection\n                allTestsById={allTestsById}\n                loadingAllTestsById={loadingAllTestsById}\n                handleTestClick={handleTestClick}\n                patientName={patient.name}\n              />\n            </>\n          )\n        )}\n      </OverlayContext.Consumer>\n\n    )\n  }\n\n  function renderTestPage() {\n    return (\n      <TestPage history={history} testId={clickedTestId} />\n    )\n  }\n\n  return (\n    <div className=\"patient-page\">\n      <Switch>\n        <Route\n          path={`${pathsNames.patients}:${patient.id}`}\n          exact\n          render={renderPageSections}\n        />\n        <Route\n          path={`${pathsNames.patients}:${patient.id}/${clickedTestId}`}\n          render={renderTestPage}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default PatientPage\n\n\nPatientPage.propTypes = {\n  getTestsById: PropTypes.func.isRequired,\n  getRehabPlanById: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  allTestsById: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n  cleanTestsById: PropTypes.func.isRequired,\n  loadingAllTestsById: PropTypes.bool.isRequired,\n  loadingPlanById: PropTypes.bool.isRequired,\n  planById: PropTypes.objectOf(PropTypes.any).isRequired,\n  patient: PropTypes.objectOf(PropTypes.any).isRequired,\n}\n","import { connect } from 'react-redux'\nimport { getTestsById, cleanTestsById } from 'redux/tests/actionsCreator'\nimport { getRehabPlanById, editPlan, createPlan } from  'redux/plans/actionsCreator'\nimport { getAllDefaultPlans } from 'redux/defaultPlans/actionsCreator'\nimport { getAllVideos } from \"redux/videos/actionsCreator\";\nimport {activateErrorModal} from \"redux/error/actionCreators\"\nimport PatientPage from './PatientPage'\n\nconst mapStateToProps = (state) => ({\n  planById: state.plansReducer.planById,\n  loadingPlanById: state.plansReducer.loadingPlanById,\n  loadingEditPlan: state.plansReducer.loadingEditPlan,\n  allDefaultPlans: state.defaultPlansReducer.allDefaultPlans,\n  allVideos: state.videosReducer.allVideos,\n  therapistId: state.authReducer.therapistId\n})\n\nconst mapDispatchToProps = {\n  getTestsById,\n  cleanTestsById,\n  getRehabPlanById,\n  getAllDefaultPlans,\n  getAllVideos,\n  editPlan,\n  createPlan,\n  activateErrorModal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPage)\n","import { get, put, post } from 'utils/fetch'\nimport { API } from 'utils/consts'\nimport * as ActionTypes from './actionTypes'\n\nexport const getRehabPlanById = (planId) => async (dispatch) => {\n  dispatch({ type: ActionTypes.FETCH_PLAN_BY_ID_SET_LOADING_TRUE })\n  if (!planId) {\n    dispatch({\n      type: ActionTypes.FETCH_PLAN_BY_ID_SUCCESS,\n      payload: null,\n    })\n  } else {\n    try {\n      const response = await get(`rehabPlan/${planId}`)\n      if (response.status === 200) {\n        dispatch({\n          type: ActionTypes.FETCH_PLAN_BY_ID_SUCCESS,\n          payload: response.data,\n        })\n      }\n    } catch (err) {\n      console.log('err: ', err)\n    }\n  }\n  dispatch({ type: ActionTypes.FETCH_PLAN_BY_ID_SET_LOADING_FALSE })\n}\n\nexport const createPlan = (formData) => async (dispatch) => {\n  dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_TRUE })\n  try {\n    const { data, status } = await post(API.rehabPlansEndpoint, formData)\n    dispatch({\n      type: ActionTypes.CREATE_PLAN_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_FALSE })\n    return API.postRequestSuccess\n  } catch (err) {\n    dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_FALSE })\n    console.log('err: ', err)\n  }\n\n  dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_FALSE })\n}\n\nexport const editPlan = (formData, planId) => async (dispatch) => {\n  dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_TRUE })\n  try {\n    const { data, status: statusCode } = await put(`${API.rehabPlansEndpoint}/${planId}`, formData)\n    if (statusCode >= 200 && statusCode < 300) {\n      dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_FALSE })\n      dispatch({\n        type: ActionTypes.EDIT_PLAN_BY_ID_SUCCESS,\n        payload: data,\n      })\n    }\n    return API.postRequestSuccess\n  } catch (err) {\n    dispatch({ type: ActionTypes.EDIT_PLAN_BY_ID_SET_LOADING_FALSE })\n    console.log('err: ', err)\n  }\n}\n","import React from 'react'\n\nconst MARKED_ROW_BACKGROUND_COLOR = 'hsl(0, 98%, 84%)'\n\nconst columns = [\n  {\n    title: 'Patient name',\n    dataIndex: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    render(_, patientObj) {\n      const rowColor = patientObj.waitForPlan ? `${MARKED_ROW_BACKGROUND_COLOR}` : ''\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (\n          <div>\n            {patientObj.picture\n                        && (\n                        <img\n                          className=\"patient-image\"\n                          src={patientObj.picture}\n                          alt=\"patient\"\n                        />\n                        )}\n                        &nbsp; &nbsp;\n            {` ${patientObj.name}`}\n          </div>\n        ),\n      }\n    },\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: (a, b) => a.age > b.age,\n    render(_, patientObj) {\n      const rowColor = patientObj.waitForPlan ? `${MARKED_ROW_BACKGROUND_COLOR}` : ''\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (<span className=\"age\">{patientObj.age}</span>),\n      }\n    },\n  },\n  {\n    title: 'Phone Number',\n    dataIndex: 'phoneNumber',\n    render(_, patientObj) {\n      const rowColor = patientObj.waitForPlan ? `${MARKED_ROW_BACKGROUND_COLOR}` : ''\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (<span className=\"phone\">{patientObj.phoneNumber}</span>),\n      }\n    },\n  },\n  {\n    title: 'Waiting Status',\n    dataIndex: 'waitForPlan',\n    sorter: (a, b) => {\n      const aa = a.waitForPlan ? 'yes' : 'no'\n      const bb = b.waitForPlan ? 'yes' : 'no'\n      return aa.localeCompare(bb)\n    },\n    render: (_, patientObj) => {\n      const rowColor = patientObj.waitForPlan ? `${MARKED_ROW_BACKGROUND_COLOR}` : ''\n      const normalizedWaitingStatus = patientObj.waitForPlan ? 'Yes' : 'No'\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (<span className=\"waiting-status\">{normalizedWaitingStatus}</span>),\n      }\n    },\n  },\n  {\n    title: 'Sensors kit Id',\n    dataIndex: 'sensorsKitID',\n    render(_, patientObj) {\n      const rowColor = patientObj.waitForPlan ? `${MARKED_ROW_BACKGROUND_COLOR}` : ''\n      const normalizedWaitingStatus = patientObj.waitForPlan ? 'Yes' : 'No'\n      return {\n        props: {\n          style: { background: `${rowColor}` },\n        },\n        children: (<span>{patientObj.sensorsKitID}</span>),\n      }\n    },\n  },\n\n]\n\nexport default columns\n","import PatientsTable from './PatientsTable'\nexport default PatientsTable;","import React from 'react'\nimport { Table } from 'antd'\nimport PropTypes from 'prop-types'\nimport './patientsTable.scss'\nimport columns from './tableColumns'\n\nconst PatientsTable = (props) => {\n  const { allPatients, handleTableRowClick, loadingAllPatients } = props\n  function handleRowClick(patientObj) {\n    return {\n      onClick: () => handleTableRowClick(patientObj),\n    }\n  }\n\n  return (\n    <div className=\"patients-table-wrapper\">\n      <Table\n        className=\"table\"\n        columns={columns}\n        dataSource={allPatients}\n        pagination={false}\n        onRow={handleRowClick}\n        loading={loadingAllPatients}\n      />\n    </div>\n  )\n}\n\nexport default PatientsTable\n\n\nPatientsTable.propTypes = {\n  handleTableRowClick: PropTypes.func.isRequired,\n  allPatients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadingAllPatients: PropTypes.bool.isRequired,\n}\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport './patients.scss'\nimport pathsNames from 'router/pathNames'\nimport Modal from 'components/Modal'\nimport { OverlayContext } from 'App'\nimport PatientForm from 'components/Forms/PatientForm'\nimport { API } from 'utils/consts'\nimport PatientPage from './components/PatientPage'\nimport PatientsTable from './components/PatientsTable'\n\nconst Patients = (props) => {\n  const {\n    location,\n    history,\n    getAllPatients,\n    allPatients,\n    loadingAllPatients,\n    loadingAllTestsById,\n    allTestsById,\n    activateErrorModal,\n    createPatient,\n    loadingCreatePatient,\n    allDefaultPlans,\n    getAllDefaultPlans,\n  } = props\n\n  const [selectedPatient, setSelectedPatient] = useState('')\n  const [shouldOpenModal, setShouldOpenModal] = useState(false)\n  const [didPostRequestSucceed, setDidPostRequestSucceed] = useState(false)\n\n  useEffect(() => {\n    getAllPatients()\n    if (selectedPatient === '' && location.pathname !== pathsNames.patients) history.push(pathsNames.patients)\n  }, [])\n\n  function handleTableRowClick(patientObj) {\n    setSelectedPatient(patientObj)\n    history.push(`${pathsNames.patients}${patientObj.id}`)\n  }\n\n  function handleAddPatientClick(toggleOverlay) {\n    setShouldOpenModal(true)\n    toggleOverlay(true)\n  }\n\n  async function handleFormSubmit(formData) {\n    const createPatientResponse = await createPatient(formData)\n    if (createPatientResponse === API.postRequestSuccess) {\n      setDidPostRequestSucceed(true)\n      setShouldOpenModal(false)\n    } else {\n      activateErrorModal(createPatientResponse && createPatientResponse.message)\n    }\n  }\n\n  function handleOnCancelModal() {\n    setShouldOpenModal(false)\n  }\n\n  function renderPatientTable() {\n    return (\n      <OverlayContext.Consumer>\n        {({ toggleOverlay }) => (\n          <>\n            <Modal\n              modalWidth={650}\n              handleFormSubmit={(formData) => handleFormSubmit(formData)}\n              visible={shouldOpenModal || didPostRequestSucceed}\n              type=\"patient\"\n              handleOnCancel={handleOnCancelModal}\n              formTitle=\"Create a new patient\"\n              formDescription=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim consequat.\"\n              FormToRender={PatientForm}\n              isLoading={loadingCreatePatient}\n              didPostRequestSucceed={didPostRequestSucceed}\n              setDidPostRequestSucceed={setDidPostRequestSucceed}\n            />\n            <button\n              type=\"button\"\n              className=\"add-btn\"\n              onClick={() => handleAddPatientClick(toggleOverlay)}\n            >\n              Add\n            </button>\n            <PatientsTable\n              allPatients={allPatients}\n              handleTableRowClick={handleTableRowClick}\n              loadingAllPatients={loadingAllPatients}\n            />\n          </>\n        )}\n      </OverlayContext.Consumer>\n    )\n  }\n\n  function renderPatientPage() {\n    return (\n      <PatientPage\n        patient={selectedPatient}\n        history={history}\n        allTestsById={allTestsById}\n        loadingAllTestsById={loadingAllTestsById}\n      />\n    )\n  }\n\n  return (\n    <div className=\"patients-page\">\n      <Switch>\n        <Route\n          path={pathsNames.patients}\n          exact\n          render={renderPatientTable}\n        />\n        { selectedPatient && (\n        <Route\n          path={`${pathsNames.patients}:${selectedPatient.id}`}\n          render={renderPatientPage}\n        />\n        ) }\n      </Switch>\n    </div>\n  )\n}\n\nexport default Patients\n\n\nPatients.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  getAllPatients: PropTypes.func.isRequired,\n  allPatients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allTestsById: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadingAllPatients: PropTypes.bool.isRequired,\n  loadingAllTestsById: PropTypes.bool.isRequired,\n}\n","import { connect } from 'react-redux'\nimport { getAllPatients, createPatient } from 'redux/patients/actionsCreator'\nimport { getTestsById, cleanTestsById } from 'redux/tests/actionsCreator'\nimport { activateErrorModal } from 'redux/error/actionCreators'\n\nimport Patients from './Patients'\n\nconst mapStateToProps = (state) => ({\n  allPatients: state.patientsReducer.allPatients,\n  allTestsById: state.testsReducer.allTestsById,\n  loadingAllPatients: state.patientsReducer.loadingAllPatients,\n  loadingAllTestsById: state.testsReducer.loadingAllTestsById,\n  loadingCreatePatient: state.patientsReducer.loadingCreatePatient,\n})\n\nconst mapDispatchToProps = {\n  getAllPatients, getTestsById, cleanTestsById, createPatient, activateErrorModal,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Patients)\n","import AddCard from './AddCard'\n\nexport default AddCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './addCard.scss'\n\nconst AddCard = ({ type, handleClick }) => (\n  <div className=\"add-card-container\" onClick={handleClick}>\n    <h2>{`Add a new ${type}`}</h2>\n    <i className=\"fas fa-plus-circle fa-5x\" />\n  </div>\n)\n\nexport default AddCard\n\nAddCard.propTypes = ({\n  type: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n})\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Button, Form, Input, Tabs, InputNumber,\n} from 'antd'\nimport { cloneDeep } from 'lodash'\nimport { DEFAULT_PLAN_FORM } from 'utils/consts'\nimport classNames from 'classnames'\n\nconst { TabPane } = Tabs\n\nconst DefaultPlanForm = (props) => {\n  const {\n    formTitle,\n    formDescription,\n    dataToEdit,\n    handleFormSubmit,\n    allVideos,\n  } = props\n  const nameInputRef = useRef(null)\n  const [videos, setVideos] = useState([])\n\n  useEffect(() => {\n    nameInputRef.current.focus()\n  }, [])\n\n  useEffect(() => {\n  })\n\n  function handleFinish(formData) {\n    if (videos.length === 0) return\n    const finalFormData = {\n      name: formData.name,\n      instructions: formData.instructions,\n      videos,\n    }\n    handleFormSubmit(finalFormData)\n  }\n\n  function handleVideosClick(videoId, e) {\n    if (e.target.className !== ''\n        && e.target.className !== 'label-container'\n        && e.target.className !== 'name-label') return\n\n    let isVideoAlreadyInList = false\n    for (let i = 0; i < videos.length; i++) {\n      if (videos[i].videoID === videoId) {\n        isVideoAlreadyInList = true\n        break\n      }\n    }\n    let updatedVideosArr = cloneDeep(videos)\n    if (isVideoAlreadyInList) {\n      updatedVideosArr = updatedVideosArr.filter(({ videoID }) => videoID !== videoId)\n    } else {\n      const tmpVideoObj = {\n        videoID: videoId,\n        times: 1,\n      }\n      updatedVideosArr.push(tmpVideoObj)\n    }\n    setVideos(updatedVideosArr)\n  }\n\n  function handleNumberChange(videoId, inputValue) {\n    const updatedVideosArr = cloneDeep(videos)\n    for (let i = 0; i < updatedVideosArr.length; i++) {\n      if (updatedVideosArr[i].videoID === videoId) {\n        updatedVideosArr[i].times = inputValue\n        break\n      }\n    }\n    setVideos(updatedVideosArr)\n  }\n\n  function renderVideo(video, index) {\n    let isSelected = false\n    let timesToSet = 1\n    for (let i = 0; i < videos.length; i++) {\n      if (videos[i].videoID === video.id) {\n        isSelected = true\n        timesToSet = videos[i].times\n      }\n    }\n    const videoClasses = classNames({\n      'video-box': true,\n      selected: isSelected,\n    })\n    return (\n      <div className={videoClasses} key={index} onClick={(e) => handleVideosClick(video.id, e)}>\n        <div className=\"label-container\">\n          <label className=\"name-label\">{video.name}</label>\n          { isSelected\n            && (\n            <div className=\"input-number-container\">\n              <label>times:</label>\n              <InputNumber\n                defaultValue={timesToSet}\n                min={1}\n                onChange={(e) => handleNumberChange(video.id, e)}\n                placeholder=\"Enter number of times\"\n              />\n            </div>\n            )}\n        </div>\n        <iframe height={150} width={376} src={video.link} />\n      </div>\n    )\n  }\n\n  const shouldDisplayRequiredInfo = videos.length === 0 ? 'display-required' : ''\n\n  return (\n    <Form className=\"form has-tabs\" layout=\"vertical\" onFinish={handleFinish}>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"plan information\" key=\"1\">\n          <div className=\"tab-content-container\">\n            <h1>{formTitle}</h1>\n            <p>{formDescription}</p>\n            <Form.Item\n              rules={[\n                { required: true, message: 'Plan name is required' },\n                { required: true, min: 3, message: 'Name should contain at least 3 characters' },\n              ]}\n              label={DEFAULT_PLAN_FORM.nameLabel}\n              name=\"name\"\n            >\n              <Input\n                className=\"form-input\"\n                defaultValue={dataToEdit && dataToEdit.name}\n                ref={nameInputRef}\n              />\n            </Form.Item>\n            <Form.Item\n              label={DEFAULT_PLAN_FORM.instructionsLabal}\n              name=\"instructions\"\n              rules={[\n                { required: true, message: 'Plan instructions field is required' },\n                { required: true, min: 6, message: 'Name should contain at least 6 characters' },\n              ]}\n            >\n              <Input className=\"form-input\" defaultValue={dataToEdit && dataToEdit.instructions} />\n            </Form.Item>\n          </div>\n        </TabPane>\n        <TabPane tab=\"videos\" key=\"2\">\n          <div className=\"tab-content-container\">\n            <Form.Item\n              className={`videos-item ${shouldDisplayRequiredInfo}`}\n              label={DEFAULT_PLAN_FORM.chooseVideosLabel}\n              name=\"videos\"\n            >\n              { videos.length === 0 && <span className={'required-input-details'}>select at least 1 video</span>}\n              {allVideos.map(renderVideo)}\n            </Form.Item>\n          </div>\n        </TabPane>\n      </Tabs>\n      <Form.Item className=\"save-btn-container\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DefaultPlanForm\n","import DefaultPlanForm from './DefaultPlanForm'\n\nexport default DefaultPlanForm\n","import DefaultPlanCard from './DefaultPlanCard'\n\nexport default DefaultPlanCard;","import React from 'react'\nimport { Card, message, Popconfirm } from 'antd'\nimport './defaultPlanCard.scss'\n\nconst DefaultPlanCard = (props) => {\n  const { plan, handleRemoveClick } = props\n\n  function handleRemove() {\n    handleRemoveClick(plan.id)\n    message.success('Deleting default plan...')\n  }\n\n  function renderDeleteAction() {\n    return [\n      <Popconfirm\n        title=\"Are you sure delete this video?\"\n        onConfirm={handleRemove}\n        okText=\"Delete\"\n        cancelText=\"Cancel\"\n      >\n        <div>\n          <i className=\"far fa-trash-alt fa-lg\" />\n        </div>\n      </Popconfirm>,\n    ]\n  }\n\n  return (\n    <Card\n      className=\"default-plan-card-container\"\n      title={plan.name}\n      actions={renderDeleteAction()}\n    >\n      <div className={'inner-container'}>\n        <p>{plan.instructions}</p>\n        <p className={'num-of-videos'}>{`# of videos: ${plan.videos.length}`}</p>\n      </div>\n    </Card>\n  )\n}\n\nexport default DefaultPlanCard\n","import React, { useEffect, useState } from 'react'\nimport { OverlayContext } from 'App'\nimport { Spin } from 'antd'\nimport AddCard from 'components/AddCard'\nimport Modal from 'components/Modal'\nimport DefaultPlansForm from 'components/Forms/DefaultPlanForm'\nimport DefaultPlanCard from 'components/DefaultPlanCard'\nimport {API} from 'utils/consts'\n// import AddCard from \"components/AddCard\";\nimport 'containers/DefaultPlans/defaultPlans.scss'\nimport {deleteDefaultPlan} from \"redux/defaultPlans/actionsCreator\";\n\nconst DefaultPlans = (props) => {\n  const {\n    allDefaultPlans,\n    loadingAllDefaultPlans,\n    getAllDefaultPlans,\n    allVideos,\n    getAllVideos,\n    createDefaultPlan,\n    deleteDefaultPlan,\n    loadingCreateDefaultPlan,\n    activateErrorModal,\n  } = props\n\n  const [didPostRequestSucceed, setDidPostRequestSucceed] = useState(false)\n  const [shouldOpenModal, setShouldOpenModal] = useState(false)\n\n  useEffect(() => {\n    getAllDefaultPlans()\n    getAllVideos()\n  }, [])\n\n  function handleAddDefaultPlanClick(toggleOverlay) {\n    toggleOverlay(true)\n    setShouldOpenModal(true)\n  }\n\n  function handleRemoveDefaultPlan(planId) {\n    deleteDefaultPlan(planId)\n  }\n\n  function handleOnCancelModal() {\n    setShouldOpenModal(false)\n  }\n\n  async function handleFormSubmit(formData) {\n    const creationResponse = await createDefaultPlan(formData)\n    if (creationResponse === API.postRequestSuccess) {\n      setDidPostRequestSucceed(true)\n      setShouldOpenModal(false)\n    } else {\n      activateErrorModal(creationResponse && creationResponse.message)\n    }\n  }\n\n  function renderDefaultPlan(plan) {\n    return (\n      <DefaultPlanCard\n        key={plan.id}\n        plan={plan}\n        handleRemoveClick={handleRemoveDefaultPlan}\n      />\n    )\n  }\n\n\n  return (\n    <OverlayContext.Consumer>\n      {({ toggleOverlay }) => (\n        <div className=\"default-plans-page\">\n          {loadingAllDefaultPlans || !allDefaultPlans ? (\n            <div className=\"loading-default-plans\">\n              <Spin />\n            </div>\n          ) : (\n            <>\n              <Modal\n                handleFormSubmit={(formData) => handleFormSubmit(formData)}\n                handleOnCancel={handleOnCancelModal}\n                visible={shouldOpenModal || didPostRequestSucceed}\n                formTitle=\"Create a new Default Plan\"\n                formDescription=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim consequat.\"\n                type={'default plan'}\n                FormToRender={DefaultPlansForm}\n                allVideos={allVideos}\n                isLoading={loadingCreateDefaultPlan}\n                didPostRequestSucceed={didPostRequestSucceed}\n                setDidPostRequestSucceed={setDidPostRequestSucceed}\n              />\n              <div className=\"default-plans-container\">\n                <AddCard type=\"default plan\" handleClick={() => handleAddDefaultPlanClick(toggleOverlay)} />\n                {allDefaultPlans.map(renderDefaultPlan)}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </OverlayContext.Consumer>\n  )\n}\nexport default DefaultPlans","import { connect } from 'react-redux'\nimport DefaultPlans from 'containers/DefaultPlans/DefaultPlans'\nimport { getAllDefaultPlans, createDefaultPlan, deleteDefaultPlan } from 'redux/defaultPlans/actionsCreator'\nimport { getAllVideos } from 'redux/videos/actionsCreator'\nimport { activateErrorModal } from 'redux/error/actionCreators'\n\n\nconst mapStateToProps = (state) => ({\n  allDefaultPlans: state.defaultPlansReducer.allDefaultPlans,\n  allVideos: state.videosReducer.allVideos,\n  loadingAllDefaultPlans: state.defaultPlansReducer.loadingAllDefaultPlans,\n  loadingCreateDefaultPlan: state.defaultPlansReducer.loadingCreateDefaultPlan,\n})\n\nconst mapDispatchToProps = {\n  getAllDefaultPlans, getAllVideos, createDefaultPlan, deleteDefaultPlan, activateErrorModal,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultPlans)\n","import VideoCard from './VideoCard'\n\nexport default VideoCard","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Popconfirm, message } from 'antd'\nimport './videoCard.scss'\n\nconst VideoCard = (props) => {\n  const {\n    video,\n    handleRemoveClick,\n  } = props\n\n  function handleRemove() {\n    handleRemoveClick(video.id)\n  }\n\n  function displayConfirmMessage() {\n    handleRemove()\n    message.success('Deleting video...')\n  }\n\n  function renderDeleteAction() {\n    return [\n      <Popconfirm\n        title=\"Are you sure delete this video?\"\n        onConfirm={displayConfirmMessage}\n        okText=\"Delete\"\n        cancelText=\"Cancel\"\n      >\n        <div>\n          <i className=\"far fa-trash-alt fa-lg\" />\n        </div>\n      </Popconfirm>,\n    ]\n  }\n  return (\n\n    <Card\n      className=\"video-card-container\"\n      title={video.name}\n      actions={renderDeleteAction()}\n    >\n      <iframe height={260} src={video.link} />\n    </Card>\n  )\n}\nexport default VideoCard\n\nVideoCard.propTypes = ({\n  handleRemoveClick: PropTypes.func.isRequired,\n  link: PropTypes.string.isRequired,\n})\n","import VideosForm from './VideosForm'\n\nexport default VideosForm","import React, {useEffect, useRef} from 'react'\nimport { Form, Input, Button } from 'antd'\nimport '../form.scss'\n\nconst VideosForm = ({ handleFormSubmit, formTitle, formDescription }) => {\n\n  const nameInputRef = useRef(null)\n\n  useEffect(() => {\n    nameInputRef.current.focus();\n  }, [])\n\n  function handleFinish(formData) {\n    handleFormSubmit(formData)\n  }\n  return (\n    <Form className=\"form\" layout=\"vertical\" onFinish={handleFinish}>\n      <div className=\"tab-content-container\">\n        <h1>{formTitle}</h1>\n        <p>{formDescription}</p>\n        <Form.Item\n          rules={\n          [\n            { required: true, message: 'Video name is required' },\n            { required: true, min: 3, message: 'Name should contain at least 3 characters' },\n          ]\n        }\n          label=\"video name:\"\n          name=\"name\"\n        >\n          <Input className=\"form-input\" ref={nameInputRef} />\n        </Form.Item>\n        <Form.Item\n          rules={\n          [\n            { required: true, message: 'Video link is required' },\n            { required: true, type: 'url', message: 'Please enter a valid url' },\n          ]\n        }\n          label=\"video link:\"\n          name=\"link\"\n        >\n          <Input className=\"form-input\" />\n        </Form.Item>\n      </div>\n      <Form.Item className=\"save-btn-container\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default VideosForm\n","import React, { useContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Spin, Card } from 'antd'\nimport AddCard from 'components/AddCard'\nimport VideoCard from 'components/VideoCard'\nimport Modal from 'components/Modal'\nimport VideosForm from 'components/Forms/VideosForm'\nimport { API } from 'utils/consts'\nimport { OverlayContext } from '../../App'\nimport './videos.scss'\n\nconst Videos = (props) => {\n  const {\n    getAllVideos,\n    createVideo,\n    allVideos,\n    loadingAllVideos,\n    loadingCreateVideo,\n    activateErrorModal,\n    deleteVideo,\n  } = props\n\n  const [didPostRequestSucceed, setDidPostRequestSucceed] = useState(false)\n  const [shouldOpenModal, setShouldOpenModal] = useState(false)\n\n  useEffect(() => {\n    getAllVideos()\n  }, [])\n\n  function handleAddVideoClick(toggleOverlay) {\n    toggleOverlay(true)\n    setShouldOpenModal(true)\n  }\n\n  async function handleRemoveVideo(idToDelete) {\n    const deletionRespone = await deleteVideo(idToDelete)\n    if (deletionRespone !== API.deleteRequestSuccess) {\n      activateErrorModal(deletionRespone && deletionRespone.message)\n    }\n  }\n\n  function renderVideo(video) {\n    return (\n      <VideoCard\n        key={video.id}\n        video={video}\n        handleRemoveClick={handleRemoveVideo}\n      />\n    )\n  }\n\n  async function handleFormSubmit(formData) {\n    const creationResponse = await createVideo(formData)\n    if (creationResponse === API.postRequestSuccess) {\n      setDidPostRequestSucceed(true)\n      setShouldOpenModal(false)\n    } else {\n      activateErrorModal(creationResponse && creationResponse.message)\n    }\n  }\n\n  function handleOnCancelModal() {\n    setShouldOpenModal(false)\n  }\n\n  return (\n    <OverlayContext.Consumer>\n      {({ toggleOverlay }) => (\n        <div className=\"videos-page\">\n          {loadingAllVideos || !allVideos ? (\n            <div className=\"loading-videos\">\n              <Spin />\n            </div>\n          ) : (\n            <>\n              <Modal\n                handleFormSubmit={(formData) => handleFormSubmit(formData)}\n                handleOnCancel={handleOnCancelModal}\n                visible={shouldOpenModal || didPostRequestSucceed}\n                formTitle=\"Create a new Video\"\n                formDescription=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim consequat.\"\n                FormToRender={VideosForm}\n                type=\"video\"\n                isLoading={loadingCreateVideo}\n                didPostRequestSucceed={didPostRequestSucceed}\n                setDidPostRequestSucceed={setDidPostRequestSucceed}\n              />\n              <div className=\"videos-container\">\n                <AddCard type=\"video\" handleClick={() => handleAddVideoClick(toggleOverlay)} />\n                {allVideos.map(renderVideo)}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </OverlayContext.Consumer>\n  )\n}\n\nexport default Videos\n\n\nVideos.propTypes = ({\n  getAllVideos: PropTypes.func.isRequired,\n  createVideo: PropTypes.func.isRequired,\n  allVideos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  loadingAllVideos: PropTypes.bool.isRequired,\n})\n","import { connect } from 'react-redux'\nimport { getAllVideos, createVideo, deleteVideo } from 'redux/videos/actionsCreator'\nimport Videos from './Videos'\nimport {activateErrorModal} from \"redux/error/actionCreators\";\n\n\nconst mapStateToProps = (state) => ({\n  allVideos: state.videosReducer.allVideos,\n  loadingAllVideos: state.videosReducer.loadingAllVideos,\n  loadingCreateVideo: state.videosReducer.loadingCreateVideo,\n})\n\nconst mapDispatchToProps = { getAllVideos, createVideo, activateErrorModal, deleteVideo }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Videos)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport classNames from 'classnames'\nimport ErrorModal from 'components/ErrorModal'\nimport { cleanError } from 'redux/error/actionCreators'\nimport NotFound from 'containers/NotFound/NotFound'\nimport pathsNames from './router/pathNames'\nimport Header from './components/Header'\nimport SideBar from './components/SideBar'\nimport PatientTests from './containers/Tests'\nimport Patients from './containers/Patients'\nimport DefaultPlans from 'containers/DefaultPlans/'\nimport Videos from './containers/Videos'\n\nexport const OverlayContext = React.createContext(false)\n\n// eslint-disable-next-line no-shadow\nconst App = ({ errorObj, cleanError, history }) => {\n\n  const [isOverlayActive, toggleOverlay] = useState(false)\n\n  const overlayClasses = classNames({\n    'app-overlay': true,\n    'modal-is-open': isOverlayActive,\n  })\n\n  return (\n    <OverlayContext.Provider\n      value={{ toggleOverlay }}\n    >\n      <>\n        <div className={overlayClasses} />\n        <>\n          <Header />\n          <SideBar history={history} />\n          <Switch>\n            <Route exact path=\"/\" component={PatientTests} />\n            <Route path={pathsNames.patientsTests} component={PatientTests} />\n            <Route path={pathsNames.patients} component={Patients} />\n            <Route path={pathsNames.defaultPlans} component={DefaultPlans} />\n            <Route exact path={pathsNames.videos} component={Videos} />\n            <Route path=\"*\" render={() => <NotFound isInApp />} />\n          </Switch>\n          {errorObj.errorOccurred\n              && (\n              <ErrorModal\n                visible={errorObj.errorOccurred}\n                errorMessage={errorObj.errorMessage}\n                cleanError={cleanError}\n                destroyOnClose\n              />\n              )}\n        </>\n      </>\n    </OverlayContext.Provider>\n  )\n}\n\n\nconst mapStateToProps = (state) => ({\n  isUserAuthenticated: state.authReducer.isUserAuthenticated,\n  loading: state.authReducer.loading,\n  errorObj: state.errorReducer.errorObj,\n})\nconst mapDispatchToProps = { cleanError }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import Loading from 'components/Loading/Loading'\n\nexport default Loading\n","import React from 'react'\nimport { Spin } from 'antd'\nimport './loading.scss'\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-page\">\n      <Spin size=\"large\" />\n    </div>\n  )\n}\n\n\nexport default Loading\n","import Form from './Form'\n\nexport default Form\n","import React, { useEffect, useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport './form.scss'\n\nconst Form = ({ handleLoginFormSubmit }) => {\n  const [mail, setMail] = useState('')\n  const [password, setPassword] = useState('')\n  const firstInputRef = useRef()\n\n  useEffect(() => {\n    firstInputRef.current.focus()\n  }, [])\n\n  function handleInputChange(event) {\n    const { value } = event.target\n    const { name } = event.target\n    name === 'mail' ? setMail(value) : setPassword(value)\n  }\n\n  function handleLoginClick(e) {\n    e.preventDefault()\n    handleLoginFormSubmit(mail, password)\n  }\n\n  return (\n    <form className=\"login-form\">\n      <input\n        type=\"text\"\n        placeholder=\"user name\"\n        onChange={handleInputChange}\n        name=\"mail\"\n        ref={firstInputRef}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"password\"\n        onChange={handleInputChange}\n        name=\"password\"\n        autoComplete=\"off\"\n      />\n      <button\n        onClick={handleLoginClick}\n        type=\"button\"\n      >\n        Login\n      </button>\n    </form>\n  )\n}\n\nexport default Form\n\nForm.propTypes = {\n  handleLoginFormSubmit: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes, { any } from 'prop-types'\nimport { Redirect } from 'react-router-dom'\n\nimport './login.scss'\n\nimport { AUTH } from 'utils/consts'\nimport Form from './components/Form'\n\n\nconst HeaderTitleAnimation = () => (\n  <svg id=\"header\" width=\"655\" height=\"104\" viewBox=\"0 0 655 104\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M33.744 100.896C27.856 100.896 22.5653 99.872 17.872 97.824C13.264 95.6906 9.63734 92.7893 6.992 89.12C4.34667 85.3653 2.98133 81.056 2.896 76.192H15.312C15.7387 80.3733 17.4453 83.9146 20.432 86.816C23.504 89.632 27.9414 91.04 33.744 91.04C39.2907 91.04 43.6427 89.6746 46.8 86.944C50.0427 84.128 51.664 80.544 51.664 76.192C51.664 72.7787 50.7254 70.0053 48.848 67.872C46.9707 65.7387 44.624 64.1173 41.808 63.008C38.992 61.8987 35.1947 60.704 30.416 59.424C24.528 57.888 19.792 56.352 16.208 54.816C12.7093 53.28 9.68 50.8907 7.12 47.648C4.64533 44.32 3.40802 39.8827 3.40802 34.336C3.40802 29.472 4.64533 25.1627 7.12 21.408C9.59466 17.6533 13.0507 14.752 17.488 12.704C22.0107 10.656 27.1733 9.63199 32.976 9.63199C41.3387 9.63199 48.1653 11.7227 53.456 15.904C58.832 20.0853 61.8613 25.632 62.544 32.544H49.744C49.3174 29.1307 47.5253 26.144 44.368 23.584C41.2107 20.9386 37.0293 19.616 31.824 19.616C26.96 19.616 22.992 20.896 19.92 23.456C16.848 25.9307 15.312 29.4293 15.312 33.952C15.312 37.1947 16.208 39.84 18 41.888C19.8773 43.936 22.1387 45.5147 24.784 46.624C27.5147 47.648 31.312 48.8427 36.176 50.208C42.064 51.8293 46.8 53.4507 50.384 55.072C53.968 56.608 57.04 59.04 59.6 62.368C62.16 65.6106 63.44 70.048 63.44 75.68C63.44 80.032 62.288 84.128 59.984 87.968C57.68 91.808 54.2667 94.9227 49.744 97.312C45.2214 99.7013 39.888 100.896 33.744 100.896Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M79.829 64.672C79.829 57.504 81.2797 51.232 84.181 45.856C87.0823 40.3947 91.0504 36.1707 96.085 33.184C101.205 30.1973 106.88 28.704 113.109 28.704C119.253 28.704 124.586 30.0267 129.109 32.672C133.632 35.3173 137.002 38.6453 139.221 42.656V29.856H150.997V100H139.221V86.944C136.917 91.04 133.461 94.4534 128.853 97.184C124.33 99.8294 119.04 101.152 112.981 101.152C106.752 101.152 101.12 99.616 96.085 96.544C91.0504 93.472 87.0823 89.1627 84.181 83.616C81.2797 78.0694 79.829 71.7547 79.829 64.672ZM139.221 64.8C139.221 59.5093 138.154 54.9013 136.021 50.976C133.888 47.0507 130.986 44.064 127.317 42.016C123.733 39.8827 119.765 38.816 115.413 38.816C111.061 38.816 107.093 39.84 103.509 41.888C99.925 43.936 97.0663 46.9227 94.933 50.848C92.7997 54.7733 91.733 59.3813 91.733 64.672C91.733 70.048 92.7997 74.7413 94.933 78.752C97.0663 82.6773 99.925 85.7067 103.509 87.84C107.093 89.888 111.061 90.912 115.413 90.912C119.765 90.912 123.733 89.888 127.317 87.84C130.986 85.7067 133.888 82.6773 136.021 78.752C138.154 74.7413 139.221 70.0907 139.221 64.8Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M202.825 39.456H188.105V100H176.457V39.456H167.369V29.856H176.457V24.864C176.457 17.0133 178.462 11.296 182.473 7.71201C186.569 4.04267 193.097 2.20801 202.057 2.20801V11.936C196.937 11.936 193.31 12.96 191.177 15.008C189.129 16.9707 188.105 20.256 188.105 24.864V29.856H202.825V39.456Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M284.006 62.24C284.006 64.4587 283.878 66.8054 283.622 69.28H227.558C227.985 76.192 230.331 81.6107 234.598 85.536C238.95 89.376 244.198 91.296 250.342 91.296C255.377 91.296 259.558 90.144 262.886 87.84C266.299 85.4507 268.689 82.2933 270.054 78.368H282.598C280.721 85.1093 276.966 90.6133 271.334 94.88C265.702 99.0613 258.705 101.152 250.342 101.152C243.686 101.152 237.713 99.6587 232.422 96.672C227.217 93.6853 223.121 89.4613 220.134 84C217.147 78.4533 215.654 72.0533 215.654 64.8C215.654 57.5467 217.105 51.1893 220.006 45.728C222.907 40.2667 226.961 36.0853 232.166 33.184C237.457 30.1973 243.515 28.704 250.342 28.704C256.998 28.704 262.886 30.1547 268.006 33.056C273.126 35.9573 277.051 39.968 279.782 45.088C282.598 50.1227 284.006 55.84 284.006 62.24ZM271.974 59.808C271.974 55.3706 270.993 51.5733 269.03 48.416C267.067 45.1733 264.379 42.7413 260.966 41.12C257.638 39.4133 253.926 38.56 249.83 38.56C243.942 38.56 238.907 40.4373 234.726 44.192C230.63 47.9467 228.283 53.152 227.686 59.808H271.974Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M452.834 10.784L426.978 100H413.922L393.186 28.192L371.682 100L358.754 100.128L333.794 10.784H346.21L365.666 86.432L387.17 10.784H400.226L420.706 86.176L440.29 10.784H452.834Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M464.829 64.672C464.829 57.504 466.28 51.232 469.181 45.856C472.082 40.3947 476.05 36.1707 481.085 33.184C486.205 30.1973 491.88 28.704 498.109 28.704C504.253 28.704 509.586 30.0267 514.109 32.672C518.632 35.3173 522.002 38.6453 524.221 42.656V29.856H535.997V100H524.221V86.944C521.917 91.04 518.461 94.4534 513.853 97.184C509.33 99.8294 504.04 101.152 497.981 101.152C491.752 101.152 486.12 99.616 481.085 96.544C476.05 93.472 472.082 89.1627 469.181 83.616C466.28 78.0694 464.829 71.7547 464.829 64.672ZM524.221 64.8C524.221 59.5093 523.154 54.9013 521.021 50.976C518.888 47.0507 515.986 44.064 512.317 42.016C508.733 39.8827 504.765 38.816 500.413 38.816C496.061 38.816 492.093 39.84 488.509 41.888C484.925 43.936 482.066 46.9227 479.933 50.848C477.8 54.7733 476.733 59.3813 476.733 64.672C476.733 70.048 477.8 74.7413 479.933 78.752C482.066 82.6773 484.925 85.7067 488.509 87.84C492.093 89.888 496.061 90.912 500.413 90.912C504.765 90.912 508.733 89.888 512.317 87.84C515.986 85.7067 518.888 82.6773 521.021 78.752C523.154 74.7413 524.221 70.0907 524.221 64.8Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M570.929 5.28V100H559.281V5.28H570.929Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n    <path d=\"M633.549 100L606.029 69.024V100H594.381V5.28H606.029V60.96L633.037 29.856H649.293L616.269 64.8L649.421 100H633.549Z\" stroke=\"white\" strokeWidth=\"4.4\" mask=\"url(#path-1-outside-1)\" />\n  </svg>\n)\n\nconst Login = (props) => {\n  const { isUserAuthenticated, location, handleLoginFormSubmit } = props\n  if (isUserAuthenticated === AUTH.isAuthenticated || isUserAuthenticated === AUTH.isPending) {\n    const { from } = location.state || { from: { pathname: '/' } }\n    return <Redirect to={from} />\n  }\n  return (\n    <div className=\"login-page\">\n      { HeaderTitleAnimation() }\n      <div className=\"login-page__form-wrapper\">\n        <Form\n          handleLoginFormSubmit={handleLoginFormSubmit}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n\nLogin.propTypes = {\n  handleLoginFormSubmit: PropTypes.func.isRequired,\n  isUserAuthenticated: PropTypes.string.isRequired,\n  location: PropTypes.objectOf(any).isRequired,\n}\n","import { connect } from 'react-redux'\n\nimport { handleLoginFormSubmit } from 'redux/auth/actionsCreator'\nimport Login from './Login'\n\n\nconst mapStateToProps = (state) => ({\n  isUserAuthenticated: state.authReducer.isUserAuthenticated,\n  loading: state.authReducer.loading,\n})\nconst mapDispatchToProps = { handleLoginFormSubmit }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Redirect, Route, withRouter } from 'react-router-dom'\nimport pathsNames from 'router/pathNames'\nimport { AUTH } from 'utils/consts'\n\nconst LoginRequiredRoute = ({ location, component: Component, ...rest }) => {\n  function renderRedirect() {\n    if (rest.isUserAuthenticated === AUTH.isNotAuthenticated) {\n      return location.pathname === pathsNames.login ? (\n        <Redirect to={{\n          pathname: pathsNames.login,\n          state: { from: location },\n        }}\n        />\n      ) : (\n        <Redirect to={{\n          pathname: pathsNames.notFound,\n          state: { from: location },\n        }}\n        />\n      )\n    }\n    return <div />\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        rest.isUserAuthenticated === AUTH.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          renderRedirect()\n        )\n      )}\n    />\n  )\n}\n\n\nconst mapStateToProps = (state) => ({\n  isUserAuthenticated: state.authReducer.isUserAuthenticated,\n  loading: state.authReducer.loading,\n})\nconst mapDispatchToProps = { }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginRequiredRoute))\n\n\nLoginRequiredRoute.propTypes = {\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  component: PropTypes.objectOf(PropTypes.any).isRequired,\n}\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { AUTH } from 'utils/consts'\nimport pathsNames from 'router/pathNames'\nimport NotFound from 'containers/NotFound/NotFound'\nimport App from './App'\nimport Loading from './components/Loading'\nimport Login from './containers/Login'\nimport LoginRequiredRoute from './LoginRequiredRoute'\nimport { checkUserAuthStatusOnAppLoad } from './redux/auth/actionsCreator'\n\n\n// eslint-disable-next-line no-shadow,react/prop-types\nfunction AppWrapper({ loading, checkUserAuthStatusOnAppLoad, isUserAuthenticated }) {\n  useEffect(() => {\n    checkUserAuthStatusOnAppLoad()\n  }, [])\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n    <Switch>\n      <Route exact path={pathsNames.login} component={Login} />\n      {isUserAuthenticated !== AUTH.isAuthenticated\n        && <Route exact path=\"/\" component={Login} />}\n      {isUserAuthenticated !== AUTH.isAuthenticated\n        && <Route path={pathsNames.notFound} component={NotFound} />}\n      <LoginRequiredRoute component={App} />\n    </Switch>\n  )\n}\n\n\nconst mapStateToProps = (state) => ({\n  isUserAuthenticated: state.authReducer.isUserAuthenticated,\n  loading: state.authReducer.loading,\n})\nconst mapDispatchToProps = { checkUserAuthStatusOnAppLoad }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AppWrapper))\n\n\nAppWrapper.propTypes = {\n  loading: PropTypes.bool.isRequired,\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport 'antd/dist/antd.css'\n\nimport AppWrapper from './AppWrapper'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <AppWrapper />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}